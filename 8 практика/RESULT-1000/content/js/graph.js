/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 163.0, "minX": 0.0, "maxY": 675002.0, "series": [{"data": [[0.0, 5372.0], [0.1, 5372.0], [0.2, 6127.0], [0.3, 6902.0], [0.4, 6951.0], [0.5, 6951.0], [0.6, 7487.0], [0.7, 7950.0], [0.8, 8398.0], [0.9, 8398.0], [1.0, 8544.0], [1.1, 8925.0], [1.2, 9308.0], [1.3, 9525.0], [1.4, 9525.0], [1.5, 9665.0], [1.6, 9723.0], [1.7, 9748.0], [1.8, 9748.0], [1.9, 10185.0], [2.0, 10459.0], [2.1, 10585.0], [2.2, 10585.0], [2.3, 10610.0], [2.4, 10751.0], [2.5, 10927.0], [2.6, 10970.0], [2.7, 10970.0], [2.8, 11087.0], [2.9, 11244.0], [3.0, 11247.0], [3.1, 11247.0], [3.2, 11281.0], [3.3, 11414.0], [3.4, 11726.0], [3.5, 11726.0], [3.6, 11782.0], [3.7, 11818.0], [3.8, 11846.0], [3.9, 12003.0], [4.0, 12003.0], [4.1, 12098.0], [4.2, 12105.0], [4.3, 12444.0], [4.4, 12444.0], [4.5, 12779.0], [4.6, 12808.0], [4.7, 12854.0], [4.8, 13272.0], [4.9, 13272.0], [5.0, 13283.0], [5.1, 13301.0], [5.2, 13310.0], [5.3, 13310.0], [5.4, 13447.0], [5.5, 13487.0], [5.6, 13506.0], [5.7, 13506.0], [5.8, 13584.0], [5.9, 13596.0], [6.0, 13614.0], [6.1, 13667.0], [6.2, 13667.0], [6.3, 13681.0], [6.4, 13949.0], [6.5, 13966.0], [6.6, 13966.0], [6.7, 14102.0], [6.8, 14310.0], [6.9, 14338.0], [7.0, 14338.0], [7.1, 14469.0], [7.2, 14471.0], [7.3, 14518.0], [7.4, 14640.0], [7.5, 14640.0], [7.6, 14705.0], [7.7, 14768.0], [7.8, 14841.0], [7.9, 14841.0], [8.0, 15409.0], [8.1, 15415.0], [8.2, 149125.0], [8.3, 149125.0], [8.4, 348930.0], [8.5, 349924.0], [8.6, 350177.0], [8.7, 350541.0], [8.8, 350541.0], [8.9, 351128.0], [9.0, 351315.0], [9.1, 351563.0], [9.2, 351563.0], [9.3, 351624.0], [9.4, 351649.0], [9.5, 351770.0], [9.6, 351819.0], [9.7, 351819.0], [9.8, 351840.0], [9.9, 352063.0], [10.0, 352068.0], [10.1, 352068.0], [10.2, 352110.0], [10.3, 352370.0], [10.4, 352463.0], [10.5, 352463.0], [10.6, 352494.0], [10.7, 352574.0], [10.8, 352733.0], [10.9, 352802.0], [11.0, 352802.0], [11.1, 352828.0], [11.2, 352844.0], [11.3, 352884.0], [11.4, 352884.0], [11.5, 353121.0], [11.6, 353139.0], [11.7, 353227.0], [11.8, 353227.0], [11.9, 353236.0], [12.0, 353311.0], [12.1, 353317.0], [12.2, 353337.0], [12.3, 353337.0], [12.4, 353341.0], [12.5, 353355.0], [12.6, 353373.0], [12.7, 353373.0], [12.8, 353408.0], [12.9, 353451.0], [13.0, 353473.0], [13.1, 353492.0], [13.2, 353492.0], [13.3, 353592.0], [13.4, 353638.0], [13.5, 353669.0], [13.6, 353669.0], [13.7, 353706.0], [13.8, 353711.0], [13.9, 353730.0], [14.0, 353730.0], [14.1, 353736.0], [14.2, 353787.0], [14.3, 353863.0], [14.4, 353867.0], [14.5, 353867.0], [14.6, 353900.0], [14.7, 353914.0], [14.8, 354093.0], [14.9, 354093.0], [15.0, 354105.0], [15.1, 354110.0], [15.2, 354111.0], [15.3, 354111.0], [15.4, 354259.0], [15.5, 354303.0], [15.6, 354303.0], [15.7, 354304.0], [15.8, 354304.0], [15.9, 354331.0], [16.0, 354351.0], [16.1, 354355.0], [16.2, 354355.0], [16.3, 354374.0], [16.4, 354374.0], [16.5, 354399.0], [16.6, 354399.0], [16.7, 354410.0], [16.8, 354431.0], [16.9, 354468.0], [17.0, 354474.0], [17.1, 354474.0], [17.2, 354491.0], [17.3, 354504.0], [17.4, 354514.0], [17.5, 354514.0], [17.6, 354539.0], [17.7, 354541.0], [17.8, 354559.0], [17.9, 354572.0], [18.0, 354572.0], [18.1, 354584.0], [18.2, 354586.0], [18.3, 354648.0], [18.4, 354648.0], [18.5, 354652.0], [18.6, 354676.0], [18.7, 354683.0], [18.8, 354683.0], [18.9, 354699.0], [19.0, 354718.0], [19.1, 354724.0], [19.2, 354732.0], [19.3, 354732.0], [19.4, 354739.0], [19.5, 354774.0], [19.6, 354790.0], [19.7, 354790.0], [19.8, 354852.0], [19.9, 354886.0], [20.0, 354889.0], [20.1, 354889.0], [20.2, 354905.0], [20.3, 354937.0], [20.4, 354944.0], [20.5, 354961.0], [20.6, 354961.0], [20.7, 354994.0], [20.8, 355000.0], [20.9, 355012.0], [21.0, 355012.0], [21.1, 355031.0], [21.2, 355039.0], [21.3, 355101.0], [21.4, 355101.0], [21.5, 355116.0], [21.6, 355128.0], [21.7, 355135.0], [21.8, 355144.0], [21.9, 355144.0], [22.0, 355152.0], [22.1, 355162.0], [22.2, 355166.0], [22.3, 355166.0], [22.4, 355177.0], [22.5, 355203.0], [22.6, 355215.0], [22.7, 355220.0], [22.8, 355220.0], [22.9, 355242.0], [23.0, 355243.0], [23.1, 355263.0], [23.2, 355263.0], [23.3, 355266.0], [23.4, 355266.0], [23.5, 355268.0], [23.6, 355268.0], [23.7, 355272.0], [23.8, 355279.0], [23.9, 355308.0], [24.0, 355330.0], [24.1, 355330.0], [24.2, 355341.0], [24.3, 355345.0], [24.4, 355353.0], [24.5, 355353.0], [24.6, 355361.0], [24.7, 355366.0], [24.8, 355404.0], [24.9, 355404.0], [25.0, 355430.0], [25.1, 355439.0], [25.2, 355449.0], [25.3, 355473.0], [25.4, 355473.0], [25.5, 355492.0], [25.6, 355499.0], [25.7, 355521.0], [25.8, 355521.0], [25.9, 355542.0], [26.0, 355550.0], [26.1, 355561.0], [26.2, 355571.0], [26.3, 355571.0], [26.4, 355586.0], [26.5, 355588.0], [26.6, 355589.0], [26.7, 355589.0], [26.8, 355594.0], [26.9, 355594.0], [27.0, 355598.0], [27.1, 355598.0], [27.2, 355600.0], [27.3, 355610.0], [27.4, 355629.0], [27.5, 355634.0], [27.6, 355634.0], [27.7, 355636.0], [27.8, 355637.0], [27.9, 355640.0], [28.0, 355640.0], [28.1, 355666.0], [28.2, 355677.0], [28.3, 355783.0], [28.4, 355783.0], [28.5, 355791.0], [28.6, 355813.0], [28.7, 355828.0], [28.8, 355830.0], [28.9, 355830.0], [29.0, 355836.0], [29.1, 355837.0], [29.2, 355839.0], [29.3, 355839.0], [29.4, 355840.0], [29.5, 355843.0], [29.6, 355847.0], [29.7, 355847.0], [29.8, 355853.0], [29.9, 355877.0], [30.0, 355888.0], [30.1, 355890.0], [30.2, 355890.0], [30.3, 355895.0], [30.4, 355897.0], [30.5, 355910.0], [30.6, 355910.0], [30.7, 355935.0], [30.8, 355940.0], [30.9, 355962.0], [31.0, 355963.0], [31.1, 355963.0], [31.2, 355970.0], [31.3, 355973.0], [31.4, 355975.0], [31.5, 355975.0], [31.6, 356002.0], [31.7, 356004.0], [31.8, 356015.0], [31.9, 356015.0], [32.0, 356038.0], [32.1, 356044.0], [32.2, 356049.0], [32.3, 356053.0], [32.4, 356053.0], [32.5, 356065.0], [32.6, 356074.0], [32.7, 356078.0], [32.8, 356078.0], [32.9, 356083.0], [33.0, 356093.0], [33.1, 356100.0], [33.2, 356100.0], [33.3, 356104.0], [33.4, 356116.0], [33.5, 356117.0], [33.6, 356117.0], [33.7, 356117.0], [33.8, 356140.0], [33.9, 356170.0], [34.0, 356180.0], [34.1, 356180.0], [34.2, 356201.0], [34.3, 356204.0], [34.4, 356209.0], [34.5, 356209.0], [34.6, 356218.0], [34.7, 356223.0], [34.8, 356228.0], [34.9, 356231.0], [35.0, 356231.0], [35.1, 356235.0], [35.2, 356241.0], [35.3, 356242.0], [35.4, 356242.0], [35.5, 356269.0], [35.6, 356277.0], [35.7, 356316.0], [35.8, 356316.0], [35.9, 356316.0], [36.0, 356324.0], [36.1, 356329.0], [36.2, 356361.0], [36.3, 356361.0], [36.4, 356362.0], [36.5, 356365.0], [36.6, 356385.0], [36.7, 356385.0], [36.8, 356387.0], [36.9, 356390.0], [37.0, 356392.0], [37.1, 356394.0], [37.2, 356394.0], [37.3, 356401.0], [37.4, 356401.0], [37.5, 356411.0], [37.6, 356411.0], [37.7, 356412.0], [37.8, 356415.0], [37.9, 356418.0], [38.0, 356418.0], [38.1, 356428.0], [38.2, 356439.0], [38.3, 356445.0], [38.4, 356446.0], [38.5, 356446.0], [38.6, 356446.0], [38.7, 356454.0], [38.8, 356456.0], [38.9, 356456.0], [39.0, 356458.0], [39.1, 356459.0], [39.2, 356461.0], [39.3, 356465.0], [39.4, 356465.0], [39.5, 356465.0], [39.6, 356475.0], [39.7, 356487.0], [39.8, 356487.0], [39.9, 356497.0], [40.0, 356497.0], [40.1, 356500.0], [40.2, 356500.0], [40.3, 356506.0], [40.4, 356516.0], [40.5, 356520.0], [40.6, 356521.0], [40.7, 356521.0], [40.8, 356525.0], [40.9, 356528.0], [41.0, 356545.0], [41.1, 356545.0], [41.2, 356559.0], [41.3, 356565.0], [41.4, 356570.0], [41.5, 356570.0], [41.6, 356577.0], [41.7, 356578.0], [41.8, 356583.0], [41.9, 356583.0], [42.0, 356583.0], [42.1, 356585.0], [42.2, 356637.0], [42.3, 356639.0], [42.4, 356639.0], [42.5, 356665.0], [42.6, 356676.0], [42.7, 356679.0], [42.8, 356679.0], [42.9, 356679.0], [43.0, 356685.0], [43.1, 356689.0], [43.2, 356690.0], [43.3, 356690.0], [43.4, 356693.0], [43.5, 356698.0], [43.6, 356715.0], [43.7, 356715.0], [43.8, 356724.0], [43.9, 356734.0], [44.0, 356735.0], [44.1, 356747.0], [44.2, 356747.0], [44.3, 356750.0], [44.4, 356751.0], [44.5, 356754.0], [44.6, 356754.0], [44.7, 356764.0], [44.8, 356764.0], [44.9, 356768.0], [45.0, 356768.0], [45.1, 356772.0], [45.2, 356773.0], [45.3, 356773.0], [45.4, 356783.0], [45.5, 356783.0], [45.6, 356786.0], [45.7, 356794.0], [45.8, 356795.0], [45.9, 356795.0], [46.0, 356795.0], [46.1, 356796.0], [46.2, 356796.0], [46.3, 356796.0], [46.4, 356796.0], [46.5, 356809.0], [46.6, 356811.0], [46.7, 356813.0], [46.8, 356813.0], [46.9, 356818.0], [47.0, 356822.0], [47.1, 356836.0], [47.2, 356836.0], [47.3, 356840.0], [47.4, 356854.0], [47.5, 356858.0], [47.6, 356858.0], [47.7, 356858.0], [47.8, 356865.0], [47.9, 356876.0], [48.0, 356879.0], [48.1, 356879.0], [48.2, 356881.0], [48.3, 356887.0], [48.4, 356891.0], [48.5, 356891.0], [48.6, 356901.0], [48.7, 356904.0], [48.8, 356907.0], [48.9, 356910.0], [49.0, 356910.0], [49.1, 356911.0], [49.2, 356914.0], [49.3, 356918.0], [49.4, 356918.0], [49.5, 356923.0], [49.6, 356937.0], [49.7, 356939.0], [49.8, 356939.0], [49.9, 356940.0], [50.0, 356943.0], [50.1, 356950.0], [50.2, 356951.0], [50.3, 356951.0], [50.4, 356964.0], [50.5, 356965.0], [50.6, 356981.0], [50.7, 356981.0], [50.8, 356995.0], [50.9, 357004.0], [51.0, 357007.0], [51.1, 357007.0], [51.2, 357012.0], [51.3, 357027.0], [51.4, 357030.0], [51.5, 357031.0], [51.6, 357031.0], [51.7, 357037.0], [51.8, 357038.0], [51.9, 357040.0], [52.0, 357040.0], [52.1, 357042.0], [52.2, 357042.0], [52.3, 357046.0], [52.4, 357046.0], [52.5, 357046.0], [52.6, 357048.0], [52.7, 357048.0], [52.8, 357050.0], [52.9, 357050.0], [53.0, 357053.0], [53.1, 357060.0], [53.2, 357061.0], [53.3, 357061.0], [53.4, 357067.0], [53.5, 357067.0], [53.6, 357071.0], [53.7, 357072.0], [53.8, 357072.0], [53.9, 357072.0], [54.0, 357086.0], [54.1, 357093.0], [54.2, 357093.0], [54.3, 357107.0], [54.4, 357118.0], [54.5, 357120.0], [54.6, 357120.0], [54.7, 357125.0], [54.8, 357136.0], [54.9, 357144.0], [55.0, 357157.0], [55.1, 357157.0], [55.2, 357159.0], [55.3, 357161.0], [55.4, 357162.0], [55.5, 357162.0], [55.6, 357170.0], [55.7, 357171.0], [55.8, 357171.0], [55.9, 357171.0], [56.0, 357180.0], [56.1, 357183.0], [56.2, 357184.0], [56.3, 357187.0], [56.4, 357187.0], [56.5, 357189.0], [56.6, 357190.0], [56.7, 357190.0], [56.8, 357190.0], [56.9, 357193.0], [57.0, 357196.0], [57.1, 357200.0], [57.2, 357200.0], [57.3, 357200.0], [57.4, 357208.0], [57.5, 357211.0], [57.6, 357219.0], [57.7, 357219.0], [57.8, 357222.0], [57.9, 357223.0], [58.0, 357228.0], [58.1, 357228.0], [58.2, 357229.0], [58.3, 357233.0], [58.4, 357234.0], [58.5, 357235.0], [58.6, 357235.0], [58.7, 357240.0], [58.8, 357246.0], [58.9, 357248.0], [59.0, 357248.0], [59.1, 357249.0], [59.2, 357249.0], [59.3, 357255.0], [59.4, 357255.0], [59.5, 357259.0], [59.6, 357279.0], [59.7, 357283.0], [59.8, 357283.0], [59.9, 357283.0], [60.0, 357285.0], [60.1, 357285.0], [60.2, 357288.0], [60.3, 357288.0], [60.4, 357289.0], [60.5, 357290.0], [60.6, 357291.0], [60.7, 357291.0], [60.8, 357295.0], [60.9, 357303.0], [61.0, 357309.0], [61.1, 357309.0], [61.2, 357309.0], [61.3, 357311.0], [61.4, 357314.0], [61.5, 357314.0], [61.6, 357314.0], [61.7, 357314.0], [61.8, 357316.0], [61.9, 357327.0], [62.0, 357329.0], [62.1, 357329.0], [62.2, 357329.0], [62.3, 357330.0], [62.4, 357330.0], [62.5, 357330.0], [62.6, 357331.0], [62.7, 357334.0], [62.8, 357340.0], [62.9, 357340.0], [63.0, 357340.0], [63.1, 357340.0], [63.2, 357342.0], [63.3, 357350.0], [63.4, 357350.0], [63.5, 357357.0], [63.6, 357357.0], [63.7, 357357.0], [63.8, 357357.0], [63.9, 357362.0], [64.0, 357367.0], [64.1, 357368.0], [64.2, 357368.0], [64.3, 357369.0], [64.4, 357370.0], [64.5, 357377.0], [64.6, 357387.0], [64.7, 357387.0], [64.8, 357392.0], [64.9, 357401.0], [65.0, 357402.0], [65.1, 357402.0], [65.2, 357412.0], [65.3, 357413.0], [65.4, 357420.0], [65.5, 357421.0], [65.6, 357421.0], [65.7, 357427.0], [65.8, 357428.0], [65.9, 357439.0], [66.0, 357439.0], [66.1, 357439.0], [66.2, 357441.0], [66.3, 357444.0], [66.4, 357444.0], [66.5, 357447.0], [66.6, 357453.0], [66.7, 357458.0], [66.8, 357470.0], [66.9, 357470.0], [67.0, 357476.0], [67.1, 357483.0], [67.2, 357500.0], [67.3, 357500.0], [67.4, 357501.0], [67.5, 357506.0], [67.6, 357508.0], [67.7, 357508.0], [67.8, 357517.0], [67.9, 357520.0], [68.0, 357532.0], [68.1, 357546.0], [68.2, 357546.0], [68.3, 357551.0], [68.4, 357552.0], [68.5, 357553.0], [68.6, 357553.0], [68.7, 357558.0], [68.8, 357568.0], [68.9, 357569.0], [69.0, 357569.0], [69.1, 357569.0], [69.2, 357590.0], [69.3, 357592.0], [69.4, 357598.0], [69.5, 357598.0], [69.6, 357600.0], [69.7, 357601.0], [69.8, 357607.0], [69.9, 357607.0], [70.0, 357608.0], [70.1, 357611.0], [70.2, 357612.0], [70.3, 357613.0], [70.4, 357613.0], [70.5, 357621.0], [70.6, 357627.0], [70.7, 357630.0], [70.8, 357630.0], [70.9, 357633.0], [71.0, 357642.0], [71.1, 357642.0], [71.2, 357642.0], [71.3, 357644.0], [71.4, 357645.0], [71.5, 357647.0], [71.6, 357658.0], [71.7, 357658.0], [71.8, 357666.0], [71.9, 357667.0], [72.0, 357668.0], [72.1, 357668.0], [72.2, 357671.0], [72.3, 357672.0], [72.4, 357677.0], [72.5, 357677.0], [72.6, 357694.0], [72.7, 357698.0], [72.8, 357704.0], [72.9, 357704.0], [73.0, 357704.0], [73.1, 357709.0], [73.2, 357709.0], [73.3, 357712.0], [73.4, 357712.0], [73.5, 357712.0], [73.6, 357720.0], [73.7, 357722.0], [73.8, 357722.0], [73.9, 357723.0], [74.0, 357726.0], [74.1, 357726.0], [74.2, 357726.0], [74.3, 357726.0], [74.4, 357740.0], [74.5, 357741.0], [74.6, 357750.0], [74.7, 357750.0], [74.8, 357754.0], [74.9, 357764.0], [75.0, 357765.0], [75.1, 357769.0], [75.2, 357769.0], [75.3, 357770.0], [75.4, 357774.0], [75.5, 357781.0], [75.6, 357781.0], [75.7, 357796.0], [75.8, 357798.0], [75.9, 357798.0], [76.0, 357798.0], [76.1, 357805.0], [76.2, 357806.0], [76.3, 357807.0], [76.4, 357809.0], [76.5, 357809.0], [76.6, 357812.0], [76.7, 357813.0], [76.8, 357816.0], [76.9, 357816.0], [77.0, 357824.0], [77.1, 357825.0], [77.2, 357827.0], [77.3, 357827.0], [77.4, 357834.0], [77.5, 357841.0], [77.6, 357846.0], [77.7, 357848.0], [77.8, 357848.0], [77.9, 357849.0], [78.0, 357861.0], [78.1, 357863.0], [78.2, 357863.0], [78.3, 357880.0], [78.4, 357908.0], [78.5, 357912.0], [78.6, 357914.0], [78.7, 357914.0], [78.8, 357915.0], [78.9, 357921.0], [79.0, 357933.0], [79.1, 357933.0], [79.2, 357936.0], [79.3, 357948.0], [79.4, 357958.0], [79.5, 357958.0], [79.6, 357968.0], [79.7, 357969.0], [79.8, 357999.0], [79.9, 358001.0], [80.0, 358001.0], [80.1, 358002.0], [80.2, 358004.0], [80.3, 358009.0], [80.4, 358009.0], [80.5, 358014.0], [80.6, 358015.0], [80.7, 358016.0], [80.8, 358016.0], [80.9, 358016.0], [81.0, 358018.0], [81.1, 358028.0], [81.2, 358028.0], [81.3, 358028.0], [81.4, 358035.0], [81.5, 358038.0], [81.6, 358039.0], [81.7, 358039.0], [81.8, 358048.0], [81.9, 358048.0], [82.0, 358054.0], [82.1, 358054.0], [82.2, 358065.0], [82.3, 358068.0], [82.4, 358070.0], [82.5, 358073.0], [82.6, 358073.0], [82.7, 358075.0], [82.8, 358078.0], [82.9, 358078.0], [83.0, 358078.0], [83.1, 358081.0], [83.2, 358087.0], [83.3, 358088.0], [83.4, 358097.0], [83.5, 358097.0], [83.6, 358102.0], [83.7, 358105.0], [83.8, 358106.0], [83.9, 358106.0], [84.0, 358108.0], [84.1, 358112.0], [84.2, 358121.0], [84.3, 358121.0], [84.4, 358124.0], [84.5, 358125.0], [84.6, 358127.0], [84.7, 358134.0], [84.8, 358134.0], [84.9, 358137.0], [85.0, 358139.0], [85.1, 358143.0], [85.2, 358143.0], [85.3, 358164.0], [85.4, 358168.0], [85.5, 358171.0], [85.6, 358171.0], [85.7, 358179.0], [85.8, 358188.0], [85.9, 358191.0], [86.0, 358192.0], [86.1, 358192.0], [86.2, 358208.0], [86.3, 358208.0], [86.4, 358209.0], [86.5, 358209.0], [86.6, 358221.0], [86.7, 358222.0], [86.8, 358224.0], [86.9, 358224.0], [87.0, 358239.0], [87.1, 358241.0], [87.2, 358255.0], [87.3, 358260.0], [87.4, 358260.0], [87.5, 358264.0], [87.6, 358275.0], [87.7, 358275.0], [87.8, 358275.0], [87.9, 358279.0], [88.0, 358284.0], [88.1, 358290.0], [88.2, 358300.0], [88.3, 358300.0], [88.4, 358301.0], [88.5, 358301.0], [88.6, 358303.0], [88.7, 358303.0], [88.8, 358304.0], [88.9, 358305.0], [89.0, 358306.0], [89.1, 358306.0], [89.2, 358308.0], [89.3, 358309.0], [89.4, 358315.0], [89.5, 358317.0], [89.6, 358317.0], [89.7, 358319.0], [89.8, 358330.0], [89.9, 358336.0], [90.0, 358336.0], [90.1, 358343.0], [90.2, 358344.0], [90.3, 358348.0], [90.4, 358348.0], [90.5, 358351.0], [90.6, 358364.0], [90.7, 358365.0], [90.8, 358398.0], [90.9, 358398.0], [91.0, 358404.0], [91.1, 358411.0], [91.2, 358416.0], [91.3, 358416.0], [91.4, 358434.0], [91.5, 358445.0], [91.6, 358462.0], [91.7, 358465.0], [91.8, 358465.0], [91.9, 358467.0], [92.0, 358469.0], [92.1, 358479.0], [92.2, 358479.0], [92.3, 358490.0], [92.4, 358491.0], [92.5, 358495.0], [92.6, 358495.0], [92.7, 358496.0], [92.8, 358497.0], [92.9, 358500.0], [93.0, 358500.0], [93.1, 358500.0], [93.2, 358504.0], [93.3, 358510.0], [93.4, 358511.0], [93.5, 358511.0], [93.6, 358515.0], [93.7, 358517.0], [93.8, 358519.0], [93.9, 358519.0], [94.0, 358528.0], [94.1, 358530.0], [94.2, 358536.0], [94.3, 358537.0], [94.4, 358537.0], [94.5, 358541.0], [94.6, 358541.0], [94.7, 358543.0], [94.8, 358543.0], [94.9, 358544.0], [95.0, 358547.0], [95.1, 358549.0], [95.2, 358549.0], [95.3, 358563.0], [95.4, 358564.0], [95.5, 358566.0], [95.6, 358566.0], [95.7, 358566.0], [95.8, 358601.0], [95.9, 358602.0], [96.0, 358605.0], [96.1, 358605.0], [96.2, 358628.0], [96.3, 358629.0], [96.4, 358629.0], [96.5, 358648.0], [96.6, 358648.0], [96.7, 358658.0], [96.8, 358658.0], [96.9, 358693.0], [97.0, 358693.0], [97.1, 358694.0], [97.2, 358696.0], [97.3, 358723.0], [97.4, 358723.0], [97.5, 358756.0], [97.6, 358785.0], [97.7, 358789.0], [97.8, 358810.0], [97.9, 358810.0], [98.0, 358810.0], [98.1, 358815.0], [98.2, 358815.0], [98.3, 358815.0], [98.4, 358816.0], [98.5, 358823.0], [98.6, 358825.0], [98.7, 358825.0], [98.8, 358830.0], [98.9, 358833.0], [99.0, 358834.0], [99.1, 358839.0], [99.2, 358839.0], [99.3, 358840.0], [99.4, 358873.0], [99.5, 358887.0], [99.6, 358887.0], [99.7, 358894.0], [99.8, 674262.0], [99.9, 674669.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 163.0], [0.1, 163.0], [0.2, 180.0], [0.3, 182.0], [0.4, 183.0], [0.5, 183.0], [0.6, 187.0], [0.7, 189.0], [0.8, 194.0], [0.9, 194.0], [1.0, 194.0], [1.1, 195.0], [1.2, 195.0], [1.3, 195.0], [1.4, 195.0], [1.5, 195.0], [1.6, 196.0], [1.7, 196.0], [1.8, 196.0], [1.9, 196.0], [2.0, 196.0], [2.1, 196.0], [2.2, 196.0], [2.3, 197.0], [2.4, 197.0], [2.5, 197.0], [2.6, 198.0], [2.7, 198.0], [2.8, 198.0], [2.9, 198.0], [3.0, 198.0], [3.1, 198.0], [3.2, 198.0], [3.3, 198.0], [3.4, 201.0], [3.5, 201.0], [3.6, 201.0], [3.7, 201.0], [3.8, 202.0], [3.9, 202.0], [4.0, 202.0], [4.1, 202.0], [4.2, 202.0], [4.3, 203.0], [4.4, 203.0], [4.5, 203.0], [4.6, 203.0], [4.7, 203.0], [4.8, 204.0], [4.9, 204.0], [5.0, 204.0], [5.1, 205.0], [5.2, 205.0], [5.3, 205.0], [5.4, 205.0], [5.5, 205.0], [5.6, 205.0], [5.7, 205.0], [5.8, 205.0], [5.9, 205.0], [6.0, 205.0], [6.1, 205.0], [6.2, 205.0], [6.3, 206.0], [6.4, 206.0], [6.5, 207.0], [6.6, 207.0], [6.7, 208.0], [6.8, 208.0], [6.9, 209.0], [7.0, 209.0], [7.1, 209.0], [7.2, 209.0], [7.3, 209.0], [7.4, 210.0], [7.5, 210.0], [7.6, 210.0], [7.7, 210.0], [7.8, 210.0], [7.9, 210.0], [8.0, 210.0], [8.1, 211.0], [8.2, 211.0], [8.3, 211.0], [8.4, 211.0], [8.5, 211.0], [8.6, 212.0], [8.7, 212.0], [8.8, 212.0], [8.9, 212.0], [9.0, 212.0], [9.1, 212.0], [9.2, 212.0], [9.3, 212.0], [9.4, 213.0], [9.5, 213.0], [9.6, 214.0], [9.7, 214.0], [9.8, 215.0], [9.9, 215.0], [10.0, 215.0], [10.1, 215.0], [10.2, 215.0], [10.3, 216.0], [10.4, 216.0], [10.5, 216.0], [10.6, 217.0], [10.7, 217.0], [10.8, 218.0], [10.9, 218.0], [11.0, 218.0], [11.1, 218.0], [11.2, 219.0], [11.3, 220.0], [11.4, 220.0], [11.5, 220.0], [11.6, 220.0], [11.7, 220.0], [11.8, 220.0], [11.9, 221.0], [12.0, 221.0], [12.1, 221.0], [12.2, 221.0], [12.3, 221.0], [12.4, 222.0], [12.5, 222.0], [12.6, 223.0], [12.7, 223.0], [12.8, 223.0], [12.9, 223.0], [13.0, 224.0], [13.1, 225.0], [13.2, 225.0], [13.3, 225.0], [13.4, 225.0], [13.5, 225.0], [13.6, 225.0], [13.7, 227.0], [13.8, 228.0], [13.9, 228.0], [14.0, 228.0], [14.1, 228.0], [14.2, 228.0], [14.3, 228.0], [14.4, 229.0], [14.5, 229.0], [14.6, 229.0], [14.7, 230.0], [14.8, 230.0], [14.9, 230.0], [15.0, 231.0], [15.1, 231.0], [15.2, 231.0], [15.3, 231.0], [15.4, 231.0], [15.5, 232.0], [15.6, 233.0], [15.7, 233.0], [15.8, 233.0], [15.9, 233.0], [16.0, 233.0], [16.1, 235.0], [16.2, 235.0], [16.3, 235.0], [16.4, 236.0], [16.5, 237.0], [16.6, 237.0], [16.7, 238.0], [16.8, 239.0], [16.9, 239.0], [17.0, 240.0], [17.1, 240.0], [17.2, 241.0], [17.3, 241.0], [17.4, 241.0], [17.5, 241.0], [17.6, 241.0], [17.7, 241.0], [17.8, 242.0], [17.9, 243.0], [18.0, 243.0], [18.1, 243.0], [18.2, 243.0], [18.3, 243.0], [18.4, 243.0], [18.5, 244.0], [18.6, 244.0], [18.7, 244.0], [18.8, 244.0], [18.9, 244.0], [19.0, 245.0], [19.1, 246.0], [19.2, 246.0], [19.3, 246.0], [19.4, 246.0], [19.5, 249.0], [19.6, 250.0], [19.7, 250.0], [19.8, 250.0], [19.9, 250.0], [20.0, 251.0], [20.1, 251.0], [20.2, 251.0], [20.3, 253.0], [20.4, 253.0], [20.5, 254.0], [20.6, 254.0], [20.7, 254.0], [20.8, 255.0], [20.9, 257.0], [21.0, 257.0], [21.1, 257.0], [21.2, 259.0], [21.3, 261.0], [21.4, 261.0], [21.5, 265.0], [21.6, 265.0], [21.7, 265.0], [21.8, 266.0], [21.9, 266.0], [22.0, 268.0], [22.1, 268.0], [22.2, 269.0], [22.3, 269.0], [22.4, 269.0], [22.5, 270.0], [22.6, 273.0], [22.7, 274.0], [22.8, 274.0], [22.9, 276.0], [23.0, 276.0], [23.1, 277.0], [23.2, 277.0], [23.3, 277.0], [23.4, 278.0], [23.5, 278.0], [23.6, 278.0], [23.7, 278.0], [23.8, 279.0], [23.9, 280.0], [24.0, 283.0], [24.1, 283.0], [24.2, 285.0], [24.3, 286.0], [24.4, 287.0], [24.5, 287.0], [24.6, 289.0], [24.7, 289.0], [24.8, 290.0], [24.9, 290.0], [25.0, 291.0], [25.1, 291.0], [25.2, 292.0], [25.3, 292.0], [25.4, 292.0], [25.5, 293.0], [25.6, 293.0], [25.7, 294.0], [25.8, 294.0], [25.9, 294.0], [26.0, 294.0], [26.1, 296.0], [26.2, 296.0], [26.3, 296.0], [26.4, 297.0], [26.5, 298.0], [26.6, 298.0], [26.7, 298.0], [26.8, 299.0], [26.9, 301.0], [27.0, 301.0], [27.1, 301.0], [27.2, 303.0], [27.3, 305.0], [27.4, 305.0], [27.5, 306.0], [27.6, 306.0], [27.7, 309.0], [27.8, 309.0], [27.9, 310.0], [28.0, 310.0], [28.1, 310.0], [28.2, 310.0], [28.3, 312.0], [28.4, 312.0], [28.5, 312.0], [28.6, 313.0], [28.7, 313.0], [28.8, 313.0], [28.9, 313.0], [29.0, 313.0], [29.1, 313.0], [29.2, 314.0], [29.3, 314.0], [29.4, 314.0], [29.5, 315.0], [29.6, 316.0], [29.7, 316.0], [29.8, 317.0], [29.9, 317.0], [30.0, 318.0], [30.1, 318.0], [30.2, 318.0], [30.3, 318.0], [30.4, 319.0], [30.5, 320.0], [30.6, 320.0], [30.7, 320.0], [30.8, 320.0], [30.9, 321.0], [31.0, 322.0], [31.1, 322.0], [31.2, 322.0], [31.3, 322.0], [31.4, 323.0], [31.5, 323.0], [31.6, 323.0], [31.7, 324.0], [31.8, 324.0], [31.9, 324.0], [32.0, 325.0], [32.1, 325.0], [32.2, 325.0], [32.3, 326.0], [32.4, 326.0], [32.5, 326.0], [32.6, 327.0], [32.7, 327.0], [32.8, 327.0], [32.9, 327.0], [33.0, 328.0], [33.1, 329.0], [33.2, 329.0], [33.3, 329.0], [33.4, 329.0], [33.5, 329.0], [33.6, 330.0], [33.7, 330.0], [33.8, 331.0], [33.9, 332.0], [34.0, 332.0], [34.1, 332.0], [34.2, 332.0], [34.3, 332.0], [34.4, 332.0], [34.5, 332.0], [34.6, 332.0], [34.7, 333.0], [34.8, 333.0], [34.9, 333.0], [35.0, 333.0], [35.1, 333.0], [35.2, 334.0], [35.3, 335.0], [35.4, 335.0], [35.5, 336.0], [35.6, 336.0], [35.7, 336.0], [35.8, 336.0], [35.9, 336.0], [36.0, 337.0], [36.1, 337.0], [36.2, 337.0], [36.3, 337.0], [36.4, 338.0], [36.5, 338.0], [36.6, 338.0], [36.7, 338.0], [36.8, 338.0], [36.9, 338.0], [37.0, 338.0], [37.1, 338.0], [37.2, 338.0], [37.3, 339.0], [37.4, 339.0], [37.5, 339.0], [37.6, 339.0], [37.7, 339.0], [37.8, 339.0], [37.9, 339.0], [38.0, 339.0], [38.1, 339.0], [38.2, 339.0], [38.3, 339.0], [38.4, 340.0], [38.5, 340.0], [38.6, 340.0], [38.7, 340.0], [38.8, 341.0], [38.9, 341.0], [39.0, 341.0], [39.1, 341.0], [39.2, 341.0], [39.3, 342.0], [39.4, 342.0], [39.5, 342.0], [39.6, 342.0], [39.7, 343.0], [39.8, 343.0], [39.9, 343.0], [40.0, 343.0], [40.1, 344.0], [40.2, 344.0], [40.3, 344.0], [40.4, 345.0], [40.5, 345.0], [40.6, 345.0], [40.7, 345.0], [40.8, 345.0], [40.9, 346.0], [41.0, 346.0], [41.1, 346.0], [41.2, 347.0], [41.3, 347.0], [41.4, 347.0], [41.5, 347.0], [41.6, 348.0], [41.7, 348.0], [41.8, 349.0], [41.9, 349.0], [42.0, 349.0], [42.1, 349.0], [42.2, 350.0], [42.3, 350.0], [42.4, 350.0], [42.5, 350.0], [42.6, 351.0], [42.7, 351.0], [42.8, 351.0], [42.9, 351.0], [43.0, 351.0], [43.1, 352.0], [43.2, 352.0], [43.3, 352.0], [43.4, 353.0], [43.5, 353.0], [43.6, 353.0], [43.7, 353.0], [43.8, 353.0], [43.9, 353.0], [44.0, 354.0], [44.1, 354.0], [44.2, 354.0], [44.3, 354.0], [44.4, 356.0], [44.5, 356.0], [44.6, 356.0], [44.7, 356.0], [44.8, 357.0], [44.9, 357.0], [45.0, 357.0], [45.1, 358.0], [45.2, 358.0], [45.3, 358.0], [45.4, 359.0], [45.5, 359.0], [45.6, 360.0], [45.7, 360.0], [45.8, 360.0], [45.9, 360.0], [46.0, 360.0], [46.1, 361.0], [46.2, 361.0], [46.3, 361.0], [46.4, 361.0], [46.5, 362.0], [46.6, 362.0], [46.7, 362.0], [46.8, 362.0], [46.9, 363.0], [47.0, 364.0], [47.1, 364.0], [47.2, 364.0], [47.3, 365.0], [47.4, 366.0], [47.5, 366.0], [47.6, 366.0], [47.7, 368.0], [47.8, 370.0], [47.9, 370.0], [48.0, 370.0], [48.1, 370.0], [48.2, 370.0], [48.3, 371.0], [48.4, 373.0], [48.5, 373.0], [48.6, 375.0], [48.7, 376.0], [48.8, 475.0], [48.9, 488.0], [49.0, 488.0], [49.1, 492.0], [49.2, 495.0], [49.3, 495.0], [49.4, 495.0], [49.5, 498.0], [49.6, 500.0], [49.7, 504.0], [49.8, 504.0], [49.9, 507.0], [50.0, 515.0], [50.1, 515.0], [50.2, 521.0], [50.3, 521.0], [50.4, 521.0], [50.5, 522.0], [50.6, 522.0], [50.7, 522.0], [50.8, 524.0], [50.9, 524.0], [51.0, 525.0], [51.1, 525.0], [51.2, 527.0], [51.3, 527.0], [51.4, 529.0], [51.5, 530.0], [51.6, 530.0], [51.7, 530.0], [51.8, 531.0], [51.9, 532.0], [52.0, 532.0], [52.1, 533.0], [52.2, 534.0], [52.3, 534.0], [52.4, 535.0], [52.5, 535.0], [52.6, 536.0], [52.7, 536.0], [52.8, 538.0], [52.9, 538.0], [53.0, 538.0], [53.1, 539.0], [53.2, 539.0], [53.3, 539.0], [53.4, 542.0], [53.5, 542.0], [53.6, 542.0], [53.7, 543.0], [53.8, 543.0], [53.9, 544.0], [54.0, 544.0], [54.1, 545.0], [54.2, 545.0], [54.3, 547.0], [54.4, 548.0], [54.5, 550.0], [54.6, 550.0], [54.7, 554.0], [54.8, 556.0], [54.9, 558.0], [55.0, 559.0], [55.1, 559.0], [55.2, 560.0], [55.3, 564.0], [55.4, 564.0], [55.5, 564.0], [55.6, 572.0], [55.7, 583.0], [55.8, 589.0], [55.9, 589.0], [56.0, 592.0], [56.1, 603.0], [56.2, 604.0], [56.3, 605.0], [56.4, 605.0], [56.5, 609.0], [56.6, 610.0], [56.7, 617.0], [56.8, 617.0], [56.9, 628.0], [57.0, 633.0], [57.1, 635.0], [57.2, 640.0], [57.3, 640.0], [57.4, 643.0], [57.5, 647.0], [57.6, 653.0], [57.7, 653.0], [57.8, 661.0], [57.9, 661.0], [58.0, 662.0], [58.1, 662.0], [58.2, 662.0], [58.3, 663.0], [58.4, 675.0], [58.5, 680.0], [58.6, 680.0], [58.7, 681.0], [58.8, 681.0], [58.9, 682.0], [59.0, 682.0], [59.1, 682.0], [59.2, 682.0], [59.3, 686.0], [59.4, 686.0], [59.5, 691.0], [59.6, 698.0], [59.7, 699.0], [59.8, 701.0], [59.9, 701.0], [60.0, 703.0], [60.1, 706.0], [60.2, 739.0], [60.3, 739.0], [60.4, 811.0], [60.5, 812.0], [60.6, 818.0], [60.7, 818.0], [60.8, 830.0], [60.9, 855.0], [61.0, 859.0], [61.1, 902.0], [61.2, 902.0], [61.3, 903.0], [61.4, 907.0], [61.5, 931.0], [61.6, 931.0], [61.7, 943.0], [61.8, 946.0], [61.9, 961.0], [62.0, 982.0], [62.1, 982.0], [62.2, 1002.0], [62.3, 1004.0], [62.4, 1024.0], [62.5, 1024.0], [62.6, 1024.0], [62.7, 1075.0], [62.8, 1090.0], [62.9, 1090.0], [63.0, 1097.0], [63.1, 1098.0], [63.2, 1101.0], [63.3, 1102.0], [63.4, 1102.0], [63.5, 1103.0], [63.6, 1105.0], [63.7, 1108.0], [63.8, 1108.0], [63.9, 1108.0], [64.0, 1110.0], [64.1, 1110.0], [64.2, 1110.0], [64.3, 1111.0], [64.4, 1111.0], [64.5, 1111.0], [64.6, 1111.0], [64.7, 1111.0], [64.8, 1112.0], [64.9, 1113.0], [65.0, 1113.0], [65.1, 1113.0], [65.2, 1114.0], [65.3, 1115.0], [65.4, 1115.0], [65.5, 1115.0], [65.6, 1115.0], [65.7, 1115.0], [65.8, 1115.0], [65.9, 1115.0], [66.0, 1115.0], [66.1, 1116.0], [66.2, 1116.0], [66.3, 1116.0], [66.4, 1116.0], [66.5, 1116.0], [66.6, 1117.0], [66.7, 1117.0], [66.8, 1117.0], [66.9, 1117.0], [67.0, 1118.0], [67.1, 1118.0], [67.2, 1118.0], [67.3, 1118.0], [67.4, 1118.0], [67.5, 1118.0], [67.6, 1119.0], [67.7, 1119.0], [67.8, 1119.0], [67.9, 1119.0], [68.0, 1119.0], [68.1, 1119.0], [68.2, 1119.0], [68.3, 1119.0], [68.4, 1119.0], [68.5, 1119.0], [68.6, 1119.0], [68.7, 1120.0], [68.8, 1120.0], [68.9, 1120.0], [69.0, 1120.0], [69.1, 1121.0], [69.2, 1121.0], [69.3, 1121.0], [69.4, 1122.0], [69.5, 1122.0], [69.6, 1122.0], [69.7, 1122.0], [69.8, 1123.0], [69.9, 1123.0], [70.0, 1123.0], [70.1, 1123.0], [70.2, 1123.0], [70.3, 1123.0], [70.4, 1123.0], [70.5, 1124.0], [70.6, 1124.0], [70.7, 1124.0], [70.8, 1124.0], [70.9, 1124.0], [71.0, 1124.0], [71.1, 1124.0], [71.2, 1124.0], [71.3, 1124.0], [71.4, 1124.0], [71.5, 1124.0], [71.6, 1125.0], [71.7, 1125.0], [71.8, 1125.0], [71.9, 1125.0], [72.0, 1126.0], [72.1, 1126.0], [72.2, 1126.0], [72.3, 1128.0], [72.4, 1128.0], [72.5, 1128.0], [72.6, 1129.0], [72.7, 1129.0], [72.8, 1129.0], [72.9, 1129.0], [73.0, 1129.0], [73.1, 1131.0], [73.2, 1131.0], [73.3, 1131.0], [73.4, 1131.0], [73.5, 1131.0], [73.6, 1131.0], [73.7, 1131.0], [73.8, 1131.0], [73.9, 1131.0], [74.0, 1132.0], [74.1, 1132.0], [74.2, 1132.0], [74.3, 1132.0], [74.4, 1132.0], [74.5, 1132.0], [74.6, 1133.0], [74.7, 1133.0], [74.8, 1133.0], [74.9, 1133.0], [75.0, 1133.0], [75.1, 1133.0], [75.2, 1133.0], [75.3, 1134.0], [75.4, 1134.0], [75.5, 1135.0], [75.6, 1135.0], [75.7, 1135.0], [75.8, 1135.0], [75.9, 1135.0], [76.0, 1135.0], [76.1, 1136.0], [76.2, 1136.0], [76.3, 1136.0], [76.4, 1136.0], [76.5, 1136.0], [76.6, 1136.0], [76.7, 1137.0], [76.8, 1137.0], [76.9, 1137.0], [77.0, 1138.0], [77.1, 1138.0], [77.2, 1138.0], [77.3, 1138.0], [77.4, 1138.0], [77.5, 1139.0], [77.6, 1139.0], [77.7, 1139.0], [77.8, 1139.0], [77.9, 1139.0], [78.0, 1139.0], [78.1, 1139.0], [78.2, 1139.0], [78.3, 1139.0], [78.4, 1140.0], [78.5, 1140.0], [78.6, 1141.0], [78.7, 1141.0], [78.8, 1141.0], [78.9, 1141.0], [79.0, 1141.0], [79.1, 1141.0], [79.2, 1142.0], [79.3, 1143.0], [79.4, 1143.0], [79.5, 1143.0], [79.6, 1144.0], [79.7, 1145.0], [79.8, 1145.0], [79.9, 1145.0], [80.0, 1145.0], [80.1, 1145.0], [80.2, 1145.0], [80.3, 1145.0], [80.4, 1145.0], [80.5, 1145.0], [80.6, 1147.0], [80.7, 1147.0], [80.8, 1147.0], [80.9, 1147.0], [81.0, 1148.0], [81.1, 1149.0], [81.2, 1149.0], [81.3, 1149.0], [81.4, 1150.0], [81.5, 1151.0], [81.6, 1153.0], [81.7, 1153.0], [81.8, 1154.0], [81.9, 1155.0], [82.0, 1156.0], [82.1, 1156.0], [82.2, 1156.0], [82.3, 1156.0], [82.4, 1157.0], [82.5, 1158.0], [82.6, 1158.0], [82.7, 1159.0], [82.8, 1162.0], [82.9, 1163.0], [83.0, 1163.0], [83.1, 1163.0], [83.2, 1163.0], [83.3, 1164.0], [83.4, 1164.0], [83.5, 1164.0], [83.6, 1165.0], [83.7, 1166.0], [83.8, 1166.0], [83.9, 1166.0], [84.0, 1167.0], [84.1, 1168.0], [84.2, 1169.0], [84.3, 1169.0], [84.4, 1170.0], [84.5, 1173.0], [84.6, 1174.0], [84.7, 1175.0], [84.8, 1175.0], [84.9, 1178.0], [85.0, 1179.0], [85.1, 1191.0], [85.2, 1191.0], [85.3, 1209.0], [85.4, 1213.0], [85.5, 1215.0], [85.6, 1215.0], [85.7, 1221.0], [85.8, 1221.0], [85.9, 1229.0], [86.0, 1231.0], [86.1, 1231.0], [86.2, 1236.0], [86.3, 1304.0], [86.4, 1359.0], [86.5, 1359.0], [86.6, 1362.0], [86.7, 1362.0], [86.8, 1365.0], [86.9, 1365.0], [87.0, 1369.0], [87.1, 1386.0], [87.2, 1391.0], [87.3, 1393.0], [87.4, 1393.0], [87.5, 1402.0], [87.6, 1412.0], [87.7, 1416.0], [87.8, 1416.0], [87.9, 1417.0], [88.0, 1422.0], [88.1, 1424.0], [88.2, 1424.0], [88.3, 1424.0], [88.4, 1429.0], [88.5, 1434.0], [88.6, 1446.0], [88.7, 1446.0], [88.8, 1447.0], [88.9, 1451.0], [89.0, 1533.0], [89.1, 1533.0], [89.2, 1534.0], [89.3, 1571.0], [89.4, 1580.0], [89.5, 1585.0], [89.6, 1585.0], [89.7, 1586.0], [89.8, 1616.0], [89.9, 3101.0], [90.0, 3101.0], [90.1, 3102.0], [90.2, 3103.0], [90.3, 3103.0], [90.4, 3103.0], [90.5, 3106.0], [90.6, 3106.0], [90.7, 3106.0], [90.8, 3108.0], [90.9, 3108.0], [91.0, 3111.0], [91.1, 3112.0], [91.2, 3112.0], [91.3, 3112.0], [91.4, 3113.0], [91.5, 3115.0], [91.6, 3116.0], [91.7, 3119.0], [91.8, 3119.0], [91.9, 3120.0], [92.0, 3124.0], [92.1, 3124.0], [92.2, 3124.0], [92.3, 3124.0], [92.4, 3125.0], [92.5, 3126.0], [92.6, 3126.0], [92.7, 3128.0], [92.8, 3129.0], [92.9, 3131.0], [93.0, 3131.0], [93.1, 3131.0], [93.2, 3132.0], [93.3, 3133.0], [93.4, 3136.0], [93.5, 3136.0], [93.6, 3136.0], [93.7, 3136.0], [93.8, 3138.0], [93.9, 3138.0], [94.0, 3141.0], [94.1, 3146.0], [94.2, 3147.0], [94.3, 3148.0], [94.4, 3148.0], [94.5, 3148.0], [94.6, 3150.0], [94.7, 3150.0], [94.8, 3150.0], [94.9, 3150.0], [95.0, 3152.0], [95.1, 3152.0], [95.2, 3152.0], [95.3, 3153.0], [95.4, 3153.0], [95.5, 3154.0], [95.6, 3154.0], [95.7, 3154.0], [95.8, 3154.0], [95.9, 3155.0], [96.0, 3157.0], [96.1, 3157.0], [96.2, 3158.0], [96.3, 3159.0], [96.4, 3160.0], [96.5, 3160.0], [96.6, 3160.0], [96.7, 3160.0], [96.8, 3161.0], [96.9, 3161.0], [97.0, 3161.0], [97.1, 3162.0], [97.2, 3162.0], [97.3, 3165.0], [97.4, 3165.0], [97.5, 3165.0], [97.6, 3170.0], [97.7, 3173.0], [97.8, 3173.0], [97.9, 3173.0], [98.0, 3174.0], [98.1, 3182.0], [98.2, 3193.0], [98.3, 3193.0], [98.4, 3194.0], [98.5, 3196.0], [98.6, 3210.0], [98.7, 3210.0], [98.8, 3217.0], [98.9, 3233.0], [99.0, 3234.0], [99.1, 3242.0], [99.2, 3242.0], [99.3, 3282.0], [99.4, 3292.0], [99.5, 3311.0], [99.6, 3311.0], [99.7, 3334.0], [99.8, 3453.0], [99.9, 3516.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 8531.0], [0.1, 8531.0], [0.2, 9087.0], [0.3, 9293.0], [0.4, 9605.0], [0.5, 9605.0], [0.6, 9988.0], [0.7, 10053.0], [0.8, 10065.0], [0.9, 10065.0], [1.0, 10076.0], [1.1, 10391.0], [1.2, 10431.0], [1.3, 10636.0], [1.4, 10636.0], [1.5, 10652.0], [1.6, 10776.0], [1.7, 10796.0], [1.8, 10796.0], [1.9, 10946.0], [2.0, 11037.0], [2.1, 11063.0], [2.2, 11063.0], [2.3, 11137.0], [2.4, 11257.0], [2.5, 11496.0], [2.6, 11558.0], [2.7, 11558.0], [2.8, 11612.0], [2.9, 11927.0], [3.0, 12068.0], [3.1, 12068.0], [3.2, 12096.0], [3.3, 12227.0], [3.4, 12316.0], [3.5, 12316.0], [3.6, 12372.0], [3.7, 12382.0], [3.8, 12400.0], [3.9, 12436.0], [4.0, 12436.0], [4.1, 12940.0], [4.2, 13094.0], [4.3, 13110.0], [4.4, 13110.0], [4.5, 13125.0], [4.6, 13764.0], [4.7, 13829.0], [4.8, 13874.0], [4.9, 13874.0], [5.0, 13881.0], [5.1, 13910.0], [5.2, 13964.0], [5.3, 13964.0], [5.4, 13970.0], [5.5, 13997.0], [5.6, 14126.0], [5.7, 14126.0], [5.8, 14318.0], [5.9, 14396.0], [6.0, 14407.0], [6.1, 14604.0], [6.2, 14604.0], [6.3, 14625.0], [6.4, 14641.0], [6.5, 14748.0], [6.6, 14748.0], [6.7, 14801.0], [6.8, 14882.0], [6.9, 14947.0], [7.0, 14947.0], [7.1, 15071.0], [7.2, 15090.0], [7.3, 15128.0], [7.4, 15548.0], [7.5, 15548.0], [7.6, 15606.0], [7.7, 15608.0], [7.8, 15676.0], [7.9, 15676.0], [8.0, 15772.0], [8.1, 15912.0], [8.2, 149401.0], [8.3, 149401.0], [8.4, 352103.0], [8.5, 352248.0], [8.6, 352388.0], [8.7, 352671.0], [8.8, 352671.0], [8.9, 352746.0], [9.0, 352757.0], [9.1, 352820.0], [9.2, 352820.0], [9.3, 352840.0], [9.4, 352951.0], [9.5, 353078.0], [9.6, 353085.0], [9.7, 353085.0], [9.8, 353180.0], [9.9, 353329.0], [10.0, 353483.0], [10.1, 353483.0], [10.2, 353553.0], [10.3, 353558.0], [10.4, 353580.0], [10.5, 353580.0], [10.6, 353601.0], [10.7, 353689.0], [10.8, 353702.0], [10.9, 353703.0], [11.0, 353703.0], [11.1, 353723.0], [11.2, 353842.0], [11.3, 353963.0], [11.4, 353963.0], [11.5, 353975.0], [11.6, 354004.0], [11.7, 354055.0], [11.8, 354055.0], [11.9, 354064.0], [12.0, 354274.0], [12.1, 354422.0], [12.2, 354525.0], [12.3, 354525.0], [12.4, 354668.0], [12.5, 354692.0], [12.6, 354770.0], [12.7, 354770.0], [12.8, 354833.0], [12.9, 355009.0], [13.0, 355035.0], [13.1, 355040.0], [13.2, 355040.0], [13.3, 355084.0], [13.4, 355123.0], [13.5, 355192.0], [13.6, 355192.0], [13.7, 355232.0], [13.8, 355262.0], [13.9, 355275.0], [14.0, 355275.0], [14.1, 355280.0], [14.2, 355284.0], [14.3, 355293.0], [14.4, 355390.0], [14.5, 355390.0], [14.6, 355431.0], [14.7, 355445.0], [14.8, 355476.0], [14.9, 355476.0], [15.0, 355524.0], [15.1, 355524.0], [15.2, 355535.0], [15.3, 355535.0], [15.4, 355543.0], [15.5, 355543.0], [15.6, 355544.0], [15.7, 355565.0], [15.8, 355565.0], [15.9, 355568.0], [16.0, 355573.0], [16.1, 355639.0], [16.2, 355639.0], [16.3, 355667.0], [16.4, 355671.0], [16.5, 355690.0], [16.6, 355690.0], [16.7, 355735.0], [16.8, 355771.0], [16.9, 355782.0], [17.0, 355783.0], [17.1, 355783.0], [17.2, 355793.0], [17.3, 355824.0], [17.4, 355885.0], [17.5, 355885.0], [17.6, 355909.0], [17.7, 355919.0], [17.8, 355928.0], [17.9, 355941.0], [18.0, 355941.0], [18.1, 355958.0], [18.2, 355984.0], [18.3, 355994.0], [18.4, 355994.0], [18.5, 355998.0], [18.6, 356045.0], [18.7, 356048.0], [18.8, 356048.0], [18.9, 356066.0], [19.0, 356068.0], [19.1, 356071.0], [19.2, 356093.0], [19.3, 356093.0], [19.4, 356166.0], [19.5, 356177.0], [19.6, 356182.0], [19.7, 356182.0], [19.8, 356244.0], [19.9, 356282.0], [20.0, 356292.0], [20.1, 356292.0], [20.2, 356316.0], [20.3, 356337.0], [20.4, 356353.0], [20.5, 356376.0], [20.6, 356376.0], [20.7, 356397.0], [20.8, 356397.0], [20.9, 356397.0], [21.0, 356397.0], [21.1, 356414.0], [21.2, 356442.0], [21.3, 356446.0], [21.4, 356446.0], [21.5, 356461.0], [21.6, 356473.0], [21.7, 356487.0], [21.8, 356493.0], [21.9, 356493.0], [22.0, 356493.0], [22.1, 356558.0], [22.2, 356574.0], [22.3, 356574.0], [22.4, 356581.0], [22.5, 356592.0], [22.6, 356598.0], [22.7, 356642.0], [22.8, 356642.0], [22.9, 356645.0], [23.0, 356665.0], [23.1, 356679.0], [23.2, 356679.0], [23.3, 356690.0], [23.4, 356696.0], [23.5, 356699.0], [23.6, 356699.0], [23.7, 356705.0], [23.8, 356713.0], [23.9, 356718.0], [24.0, 356731.0], [24.1, 356731.0], [24.2, 356738.0], [24.3, 356747.0], [24.4, 356757.0], [24.5, 356757.0], [24.6, 356765.0], [24.7, 356769.0], [24.8, 356771.0], [24.9, 356771.0], [25.0, 356775.0], [25.1, 356777.0], [25.2, 356779.0], [25.3, 356793.0], [25.4, 356793.0], [25.5, 356798.0], [25.6, 356799.0], [25.7, 356824.0], [25.8, 356824.0], [25.9, 356839.0], [26.0, 356842.0], [26.1, 356880.0], [26.2, 356882.0], [26.3, 356882.0], [26.4, 356892.0], [26.5, 356907.0], [26.6, 356912.0], [26.7, 356912.0], [26.8, 356925.0], [26.9, 356930.0], [27.0, 356938.0], [27.1, 356938.0], [27.2, 356938.0], [27.3, 356942.0], [27.4, 356968.0], [27.5, 356982.0], [27.6, 356982.0], [27.7, 356994.0], [27.8, 356996.0], [27.9, 357000.0], [28.0, 357000.0], [28.1, 357014.0], [28.2, 357014.0], [28.3, 357016.0], [28.4, 357016.0], [28.5, 357021.0], [28.6, 357023.0], [28.7, 357043.0], [28.8, 357055.0], [28.9, 357055.0], [29.0, 357056.0], [29.1, 357062.0], [29.2, 357064.0], [29.3, 357064.0], [29.4, 357067.0], [29.5, 357071.0], [29.6, 357072.0], [29.7, 357072.0], [29.8, 357072.0], [29.9, 357076.0], [30.0, 357079.0], [30.1, 357090.0], [30.2, 357090.0], [30.3, 357099.0], [30.4, 357102.0], [30.5, 357106.0], [30.6, 357106.0], [30.7, 357108.0], [30.8, 357110.0], [30.9, 357111.0], [31.0, 357112.0], [31.1, 357112.0], [31.2, 357118.0], [31.3, 357120.0], [31.4, 357120.0], [31.5, 357120.0], [31.6, 357131.0], [31.7, 357131.0], [31.8, 357134.0], [31.9, 357134.0], [32.0, 357143.0], [32.1, 357155.0], [32.2, 357166.0], [32.3, 357180.0], [32.4, 357180.0], [32.5, 357182.0], [32.6, 357187.0], [32.7, 357206.0], [32.8, 357206.0], [32.9, 357213.0], [33.0, 357214.0], [33.1, 357214.0], [33.2, 357214.0], [33.3, 357215.0], [33.4, 357218.0], [33.5, 357218.0], [33.6, 357222.0], [33.7, 357222.0], [33.8, 357225.0], [33.9, 357231.0], [34.0, 357234.0], [34.1, 357234.0], [34.2, 357235.0], [34.3, 357238.0], [34.4, 357238.0], [34.5, 357238.0], [34.6, 357258.0], [34.7, 357259.0], [34.8, 357260.0], [34.9, 357266.0], [35.0, 357266.0], [35.1, 357286.0], [35.2, 357301.0], [35.3, 357303.0], [35.4, 357303.0], [35.5, 357316.0], [35.6, 357330.0], [35.7, 357339.0], [35.8, 357342.0], [35.9, 357342.0], [36.0, 357363.0], [36.1, 357370.0], [36.2, 357373.0], [36.3, 357373.0], [36.4, 357382.0], [36.5, 357383.0], [36.6, 357405.0], [36.7, 357405.0], [36.8, 357406.0], [36.9, 357409.0], [37.0, 357410.0], [37.1, 357418.0], [37.2, 357418.0], [37.3, 357419.0], [37.4, 357431.0], [37.5, 357434.0], [37.6, 357434.0], [37.7, 357443.0], [37.8, 357445.0], [37.9, 357458.0], [38.0, 357458.0], [38.1, 357461.0], [38.2, 357462.0], [38.3, 357462.0], [38.4, 357463.0], [38.5, 357463.0], [38.6, 357469.0], [38.7, 357478.0], [38.8, 357481.0], [38.9, 357481.0], [39.0, 357481.0], [39.1, 357482.0], [39.2, 357485.0], [39.3, 357486.0], [39.4, 357486.0], [39.5, 357488.0], [39.6, 357495.0], [39.7, 357499.0], [39.8, 357499.0], [39.9, 357501.0], [40.0, 357502.0], [40.1, 357511.0], [40.2, 357511.0], [40.3, 357512.0], [40.4, 357512.0], [40.5, 357513.0], [40.6, 357515.0], [40.7, 357515.0], [40.8, 357517.0], [40.9, 357523.0], [41.0, 357523.0], [41.1, 357523.0], [41.2, 357528.0], [41.3, 357529.0], [41.4, 357534.0], [41.5, 357534.0], [41.6, 357537.0], [41.7, 357541.0], [41.8, 357544.0], [41.9, 357544.0], [42.0, 357544.0], [42.1, 357544.0], [42.2, 357546.0], [42.3, 357547.0], [42.4, 357547.0], [42.5, 357552.0], [42.6, 357553.0], [42.7, 357563.0], [42.8, 357563.0], [42.9, 357565.0], [43.0, 357568.0], [43.1, 357570.0], [43.2, 357576.0], [43.3, 357576.0], [43.4, 357578.0], [43.5, 357578.0], [43.6, 357594.0], [43.7, 357594.0], [43.8, 357595.0], [43.9, 357597.0], [44.0, 357597.0], [44.1, 357610.0], [44.2, 357610.0], [44.3, 357614.0], [44.4, 357621.0], [44.5, 357621.0], [44.6, 357621.0], [44.7, 357622.0], [44.8, 357622.0], [44.9, 357635.0], [45.0, 357635.0], [45.1, 357635.0], [45.2, 357637.0], [45.3, 357637.0], [45.4, 357641.0], [45.5, 357641.0], [45.6, 357641.0], [45.7, 357644.0], [45.8, 357645.0], [45.9, 357645.0], [46.0, 357646.0], [46.1, 357652.0], [46.2, 357652.0], [46.3, 357652.0], [46.4, 357653.0], [46.5, 357661.0], [46.6, 357668.0], [46.7, 357669.0], [46.8, 357669.0], [46.9, 357684.0], [47.0, 357686.0], [47.1, 357689.0], [47.2, 357689.0], [47.3, 357689.0], [47.4, 357695.0], [47.5, 357705.0], [47.6, 357705.0], [47.7, 357714.0], [47.8, 357719.0], [47.9, 357728.0], [48.0, 357730.0], [48.1, 357730.0], [48.2, 357737.0], [48.3, 357753.0], [48.4, 357754.0], [48.5, 357754.0], [48.6, 357757.0], [48.7, 357762.0], [48.8, 357767.0], [48.9, 357777.0], [49.0, 357777.0], [49.1, 357796.0], [49.2, 357807.0], [49.3, 357810.0], [49.4, 357810.0], [49.5, 357810.0], [49.6, 357824.0], [49.7, 357825.0], [49.8, 357825.0], [49.9, 357826.0], [50.0, 357830.0], [50.1, 357831.0], [50.2, 357831.0], [50.3, 357831.0], [50.4, 357832.0], [50.5, 357832.0], [50.6, 357832.0], [50.7, 357832.0], [50.8, 357835.0], [50.9, 357836.0], [51.0, 357836.0], [51.1, 357836.0], [51.2, 357836.0], [51.3, 357836.0], [51.4, 357837.0], [51.5, 357838.0], [51.6, 357838.0], [51.7, 357838.0], [51.8, 357839.0], [51.9, 357843.0], [52.0, 357843.0], [52.1, 357846.0], [52.2, 357846.0], [52.3, 357852.0], [52.4, 357857.0], [52.5, 357857.0], [52.6, 357861.0], [52.7, 357865.0], [52.8, 357865.0], [52.9, 357865.0], [53.0, 357865.0], [53.1, 357866.0], [53.2, 357874.0], [53.3, 357874.0], [53.4, 357875.0], [53.5, 357887.0], [53.6, 357890.0], [53.7, 357896.0], [53.8, 357896.0], [53.9, 357901.0], [54.0, 357906.0], [54.1, 357910.0], [54.2, 357910.0], [54.3, 357912.0], [54.4, 357913.0], [54.5, 357921.0], [54.6, 357921.0], [54.7, 357926.0], [54.8, 357929.0], [54.9, 357929.0], [55.0, 357934.0], [55.1, 357934.0], [55.2, 357936.0], [55.3, 357938.0], [55.4, 357938.0], [55.5, 357938.0], [55.6, 357944.0], [55.7, 357945.0], [55.8, 357945.0], [55.9, 357945.0], [56.0, 357947.0], [56.1, 357955.0], [56.2, 357960.0], [56.3, 357975.0], [56.4, 357975.0], [56.5, 357975.0], [56.6, 357989.0], [56.7, 357992.0], [56.8, 357992.0], [56.9, 358007.0], [57.0, 358007.0], [57.1, 358010.0], [57.2, 358017.0], [57.3, 358017.0], [57.4, 358017.0], [57.5, 358018.0], [57.6, 358019.0], [57.7, 358019.0], [57.8, 358038.0], [57.9, 358038.0], [58.0, 358039.0], [58.1, 358039.0], [58.2, 358040.0], [58.3, 358043.0], [58.4, 358044.0], [58.5, 358048.0], [58.6, 358048.0], [58.7, 358048.0], [58.8, 358055.0], [58.9, 358063.0], [59.0, 358063.0], [59.1, 358067.0], [59.2, 358067.0], [59.3, 358067.0], [59.4, 358067.0], [59.5, 358071.0], [59.6, 358075.0], [59.7, 358077.0], [59.8, 358088.0], [59.9, 358088.0], [60.0, 358089.0], [60.1, 358092.0], [60.2, 358093.0], [60.3, 358093.0], [60.4, 358095.0], [60.5, 358097.0], [60.6, 358101.0], [60.7, 358101.0], [60.8, 358104.0], [60.9, 358112.0], [61.0, 358114.0], [61.1, 358120.0], [61.2, 358120.0], [61.3, 358120.0], [61.4, 358123.0], [61.5, 358125.0], [61.6, 358125.0], [61.7, 358136.0], [61.8, 358136.0], [61.9, 358138.0], [62.0, 358151.0], [62.1, 358151.0], [62.2, 358153.0], [62.3, 358154.0], [62.4, 358158.0], [62.5, 358158.0], [62.6, 358165.0], [62.7, 358166.0], [62.8, 358168.0], [62.9, 358168.0], [63.0, 358169.0], [63.1, 358169.0], [63.2, 358170.0], [63.3, 358173.0], [63.4, 358173.0], [63.5, 358178.0], [63.6, 358183.0], [63.7, 358185.0], [63.8, 358185.0], [63.9, 358186.0], [64.0, 358190.0], [64.1, 358192.0], [64.2, 358192.0], [64.3, 358195.0], [64.4, 358196.0], [64.5, 358196.0], [64.6, 358198.0], [64.7, 358198.0], [64.8, 358201.0], [64.9, 358203.0], [65.0, 358204.0], [65.1, 358204.0], [65.2, 358215.0], [65.3, 358222.0], [65.4, 358223.0], [65.5, 358227.0], [65.6, 358227.0], [65.7, 358229.0], [65.8, 358234.0], [65.9, 358234.0], [66.0, 358234.0], [66.1, 358236.0], [66.2, 358239.0], [66.3, 358243.0], [66.4, 358243.0], [66.5, 358245.0], [66.6, 358246.0], [66.7, 358247.0], [66.8, 358247.0], [66.9, 358247.0], [67.0, 358247.0], [67.1, 358251.0], [67.2, 358252.0], [67.3, 358252.0], [67.4, 358252.0], [67.5, 358253.0], [67.6, 358255.0], [67.7, 358255.0], [67.8, 358258.0], [67.9, 358261.0], [68.0, 358266.0], [68.1, 358267.0], [68.2, 358267.0], [68.3, 358270.0], [68.4, 358271.0], [68.5, 358272.0], [68.6, 358272.0], [68.7, 358278.0], [68.8, 358280.0], [68.9, 358286.0], [69.0, 358286.0], [69.1, 358287.0], [69.2, 358287.0], [69.3, 358289.0], [69.4, 358290.0], [69.5, 358290.0], [69.6, 358291.0], [69.7, 358291.0], [69.8, 358293.0], [69.9, 358293.0], [70.0, 358298.0], [70.1, 358305.0], [70.2, 358305.0], [70.3, 358306.0], [70.4, 358306.0], [70.5, 358307.0], [70.6, 358309.0], [70.7, 358310.0], [70.8, 358310.0], [70.9, 358311.0], [71.0, 358313.0], [71.1, 358316.0], [71.2, 358316.0], [71.3, 358316.0], [71.4, 358316.0], [71.5, 358323.0], [71.6, 358326.0], [71.7, 358326.0], [71.8, 358327.0], [71.9, 358334.0], [72.0, 358334.0], [72.1, 358334.0], [72.2, 358335.0], [72.3, 358336.0], [72.4, 358337.0], [72.5, 358337.0], [72.6, 358343.0], [72.7, 358343.0], [72.8, 358343.0], [72.9, 358345.0], [73.0, 358345.0], [73.1, 358345.0], [73.2, 358347.0], [73.3, 358347.0], [73.4, 358347.0], [73.5, 358349.0], [73.6, 358352.0], [73.7, 358352.0], [73.8, 358352.0], [73.9, 358353.0], [74.0, 358353.0], [74.1, 358355.0], [74.2, 358356.0], [74.3, 358356.0], [74.4, 358356.0], [74.5, 358362.0], [74.6, 358365.0], [74.7, 358365.0], [74.8, 358370.0], [74.9, 358375.0], [75.0, 358377.0], [75.1, 358385.0], [75.2, 358385.0], [75.3, 358387.0], [75.4, 358388.0], [75.5, 358388.0], [75.6, 358388.0], [75.7, 358390.0], [75.8, 358399.0], [75.9, 358407.0], [76.0, 358407.0], [76.1, 358408.0], [76.2, 358410.0], [76.3, 358411.0], [76.4, 358411.0], [76.5, 358411.0], [76.6, 358412.0], [76.7, 358413.0], [76.8, 358419.0], [76.9, 358419.0], [77.0, 358426.0], [77.1, 358428.0], [77.2, 358428.0], [77.3, 358428.0], [77.4, 358430.0], [77.5, 358433.0], [77.6, 358435.0], [77.7, 358436.0], [77.8, 358436.0], [77.9, 358436.0], [78.0, 358437.0], [78.1, 358439.0], [78.2, 358439.0], [78.3, 358445.0], [78.4, 358445.0], [78.5, 358453.0], [78.6, 358454.0], [78.7, 358454.0], [78.8, 358455.0], [78.9, 358458.0], [79.0, 358464.0], [79.1, 358464.0], [79.2, 358469.0], [79.3, 358471.0], [79.4, 358473.0], [79.5, 358473.0], [79.6, 358477.0], [79.7, 358478.0], [79.8, 358480.0], [79.9, 358485.0], [80.0, 358485.0], [80.1, 358490.0], [80.2, 358491.0], [80.3, 358491.0], [80.4, 358491.0], [80.5, 358507.0], [80.6, 358507.0], [80.7, 358512.0], [80.8, 358512.0], [80.9, 358514.0], [81.0, 358515.0], [81.1, 358523.0], [81.2, 358527.0], [81.3, 358527.0], [81.4, 358529.0], [81.5, 358534.0], [81.6, 358534.0], [81.7, 358534.0], [81.8, 358535.0], [81.9, 358537.0], [82.0, 358538.0], [82.1, 358538.0], [82.2, 358538.0], [82.3, 358541.0], [82.4, 358544.0], [82.5, 358550.0], [82.6, 358550.0], [82.7, 358554.0], [82.8, 358557.0], [82.9, 358559.0], [83.0, 358559.0], [83.1, 358561.0], [83.2, 358563.0], [83.3, 358565.0], [83.4, 358566.0], [83.5, 358566.0], [83.6, 358573.0], [83.7, 358576.0], [83.8, 358578.0], [83.9, 358578.0], [84.0, 358584.0], [84.1, 358592.0], [84.2, 358597.0], [84.3, 358597.0], [84.4, 358601.0], [84.5, 358603.0], [84.6, 358604.0], [84.7, 358608.0], [84.8, 358608.0], [84.9, 358609.0], [85.0, 358618.0], [85.1, 358619.0], [85.2, 358619.0], [85.3, 358622.0], [85.4, 358623.0], [85.5, 358624.0], [85.6, 358624.0], [85.7, 358630.0], [85.8, 358637.0], [85.9, 358645.0], [86.0, 358649.0], [86.1, 358649.0], [86.2, 358651.0], [86.3, 358653.0], [86.4, 358655.0], [86.5, 358655.0], [86.6, 358657.0], [86.7, 358657.0], [86.8, 358658.0], [86.9, 358658.0], [87.0, 358660.0], [87.1, 358674.0], [87.2, 358678.0], [87.3, 358692.0], [87.4, 358692.0], [87.5, 358692.0], [87.6, 358701.0], [87.7, 358702.0], [87.8, 358702.0], [87.9, 358704.0], [88.0, 358704.0], [88.1, 358706.0], [88.2, 358710.0], [88.3, 358710.0], [88.4, 358715.0], [88.5, 358715.0], [88.6, 358719.0], [88.7, 358719.0], [88.8, 358722.0], [88.9, 358728.0], [89.0, 358730.0], [89.1, 358730.0], [89.2, 358733.0], [89.3, 358734.0], [89.4, 358743.0], [89.5, 358746.0], [89.6, 358746.0], [89.7, 358746.0], [89.8, 358748.0], [89.9, 358755.0], [90.0, 358755.0], [90.1, 358757.0], [90.2, 358759.0], [90.3, 358765.0], [90.4, 358765.0], [90.5, 358767.0], [90.6, 358768.0], [90.7, 358775.0], [90.8, 358778.0], [90.9, 358778.0], [91.0, 358783.0], [91.1, 358785.0], [91.2, 358795.0], [91.3, 358795.0], [91.4, 358796.0], [91.5, 358812.0], [91.6, 358812.0], [91.7, 358813.0], [91.8, 358813.0], [91.9, 358815.0], [92.0, 358819.0], [92.1, 358821.0], [92.2, 358821.0], [92.3, 358825.0], [92.4, 358833.0], [92.5, 358838.0], [92.6, 358838.0], [92.7, 358838.0], [92.8, 358843.0], [92.9, 358843.0], [93.0, 358845.0], [93.1, 358845.0], [93.2, 358847.0], [93.3, 358849.0], [93.4, 358857.0], [93.5, 358857.0], [93.6, 358860.0], [93.7, 358860.0], [93.8, 358862.0], [93.9, 358862.0], [94.0, 358865.0], [94.1, 358866.0], [94.2, 358877.0], [94.3, 358884.0], [94.4, 358884.0], [94.5, 358885.0], [94.6, 358889.0], [94.7, 358902.0], [94.8, 358902.0], [94.9, 358903.0], [95.0, 358911.0], [95.1, 358912.0], [95.2, 358912.0], [95.3, 358957.0], [95.4, 358972.0], [95.5, 358975.0], [95.6, 358981.0], [95.7, 358981.0], [95.8, 358984.0], [95.9, 359012.0], [96.0, 359021.0], [96.1, 359021.0], [96.2, 359025.0], [96.3, 359036.0], [96.4, 359036.0], [96.5, 359038.0], [96.6, 359038.0], [96.7, 359038.0], [96.8, 359041.0], [96.9, 359045.0], [97.0, 359045.0], [97.1, 359045.0], [97.2, 359045.0], [97.3, 359047.0], [97.4, 359047.0], [97.5, 359048.0], [97.6, 359056.0], [97.7, 359060.0], [97.8, 359060.0], [97.9, 359060.0], [98.0, 359066.0], [98.1, 359067.0], [98.2, 359070.0], [98.3, 359070.0], [98.4, 359071.0], [98.5, 359074.0], [98.6, 359077.0], [98.7, 359077.0], [98.8, 359079.0], [98.9, 359080.0], [99.0, 359081.0], [99.1, 359081.0], [99.2, 359081.0], [99.3, 359084.0], [99.4, 359087.0], [99.5, 359095.0], [99.6, 359095.0], [99.7, 359095.0], [99.8, 674512.0], [99.9, 675002.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 181.0, "series": [{"data": [[354500.0, 8.0], [356100.0, 8.0], [357700.0, 25.0], [351300.0, 1.0], [674200.0, 1.0], [356800.0, 16.0], [353600.0, 2.0], [355200.0, 11.0], [352000.0, 2.0], [358400.0, 15.0], [356300.0, 12.0], [354700.0, 6.0], [353100.0, 2.0], [357900.0, 12.0], [351500.0, 1.0], [349900.0, 1.0], [357000.0, 26.0], [353800.0, 2.0], [355400.0, 7.0], [358600.0, 12.0], [353300.0, 6.0], [356500.0, 16.0], [354900.0, 5.0], [358100.0, 20.0], [350100.0, 1.0], [351700.0, 1.0], [355600.0, 9.0], [357200.0, 29.0], [354000.0, 1.0], [352400.0, 2.0], [358800.0, 15.0], [149100.0, 1.0], [355100.0, 9.0], [356700.0, 22.0], [358300.0, 21.0], [353500.0, 1.0], [674600.0, 1.0], [357400.0, 18.0], [355800.0, 15.0], [354200.0, 1.0], [353700.0, 5.0], [356900.0, 18.0], [355300.0, 7.0], [358500.0, 22.0], [352100.0, 1.0], [350500.0, 1.0], [348900.0, 1.0], [357600.0, 25.0], [356000.0, 12.0], [354400.0, 5.0], [352800.0, 4.0], [355500.0, 11.0], [357100.0, 22.0], [353900.0, 2.0], [352300.0, 1.0], [358700.0, 4.0], [5300.0, 1.0], [354600.0, 5.0], [356200.0, 12.0], [357800.0, 18.0], [6100.0, 1.0], [6900.0, 2.0], [7400.0, 1.0], [7900.0, 1.0], [8500.0, 1.0], [8300.0, 1.0], [8900.0, 1.0], [9700.0, 2.0], [9300.0, 1.0], [9500.0, 1.0], [9600.0, 1.0], [10100.0, 1.0], [10400.0, 1.0], [10500.0, 1.0], [10700.0, 1.0], [10600.0, 1.0], [357300.0, 31.0], [10900.0, 2.0], [11200.0, 3.0], [11000.0, 1.0], [354100.0, 3.0], [355700.0, 2.0], [352500.0, 1.0], [11700.0, 2.0], [11400.0, 1.0], [12100.0, 1.0], [12000.0, 2.0], [11800.0, 2.0], [12700.0, 1.0], [12400.0, 1.0], [12800.0, 2.0], [13200.0, 2.0], [13300.0, 2.0], [13500.0, 3.0], [13600.0, 3.0], [13400.0, 2.0], [14300.0, 2.0], [14100.0, 1.0], [13900.0, 2.0], [14400.0, 2.0], [14700.0, 2.0], [14800.0, 1.0], [14600.0, 1.0], [14500.0, 1.0], [15400.0, 2.0], [356400.0, 22.0], [353200.0, 2.0], [358000.0, 28.0], [354800.0, 3.0], [351600.0, 2.0], [354300.0, 9.0], [357500.0, 18.0], [355900.0, 8.0], [352700.0, 1.0], [351100.0, 1.0], [356600.0, 11.0], [353400.0, 4.0], [358200.0, 16.0], [351800.0, 2.0], [355000.0, 4.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[600.0, 29.0], [700.0, 4.0], [3100.0, 67.0], [200.0, 181.0], [3200.0, 7.0], [3300.0, 2.0], [800.0, 6.0], [3400.0, 1.0], [3500.0, 1.0], [900.0, 8.0], [1000.0, 8.0], [1100.0, 170.0], [300.0, 169.0], [1200.0, 8.0], [1300.0, 9.0], [1400.0, 12.0], [1500.0, 6.0], [1600.0, 1.0], [400.0, 6.0], [100.0, 26.0], [500.0, 50.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[357700.0, 13.0], [356100.0, 3.0], [354500.0, 1.0], [352900.0, 1.0], [356800.0, 6.0], [358400.0, 35.0], [355200.0, 6.0], [353600.0, 2.0], [356300.0, 7.0], [357900.0, 23.0], [354700.0, 1.0], [353100.0, 1.0], [357000.0, 19.0], [355400.0, 3.0], [358600.0, 25.0], [353800.0, 1.0], [352200.0, 1.0], [358100.0, 32.0], [356500.0, 5.0], [353300.0, 1.0], [675000.0, 1.0], [357200.0, 19.0], [355600.0, 4.0], [354000.0, 3.0], [358800.0, 25.0], [356700.0, 16.0], [358300.0, 45.0], [355100.0, 2.0], [353500.0, 3.0], [357400.0, 25.0], [355800.0, 2.0], [354200.0, 1.0], [352600.0, 1.0], [359000.0, 30.0], [356900.0, 11.0], [358500.0, 30.0], [355300.0, 1.0], [353700.0, 3.0], [352100.0, 1.0], [357600.0, 26.0], [356000.0, 6.0], [354400.0, 1.0], [352800.0, 2.0], [355500.0, 9.0], [357100.0, 18.0], [358700.0, 30.0], [353900.0, 2.0], [352300.0, 1.0], [674500.0, 1.0], [356200.0, 3.0], [357800.0, 36.0], [354600.0, 2.0], [353000.0, 2.0], [8500.0, 1.0], [9200.0, 1.0], [9000.0, 1.0], [9600.0, 1.0], [149400.0, 1.0], [9900.0, 1.0], [10000.0, 3.0], [10400.0, 1.0], [10600.0, 2.0], [10700.0, 2.0], [10300.0, 1.0], [11100.0, 1.0], [11000.0, 2.0], [10900.0, 1.0], [11200.0, 1.0], [355700.0, 5.0], [357300.0, 11.0], [358900.0, 9.0], [11400.0, 1.0], [11500.0, 1.0], [11600.0, 1.0], [11900.0, 1.0], [12000.0, 2.0], [12200.0, 1.0], [12400.0, 2.0], [12300.0, 3.0], [13100.0, 2.0], [13000.0, 1.0], [12900.0, 1.0], [13700.0, 1.0], [13800.0, 3.0], [13900.0, 4.0], [14300.0, 2.0], [14100.0, 1.0], [14600.0, 3.0], [14700.0, 1.0], [14800.0, 2.0], [14400.0, 1.0], [14900.0, 1.0], [15000.0, 2.0], [15100.0, 1.0], [15600.0, 3.0], [15500.0, 1.0], [15700.0, 1.0], [15900.0, 1.0], [356400.0, 8.0], [358000.0, 29.0], [354800.0, 1.0], [355900.0, 8.0], [357500.0, 33.0], [352700.0, 2.0], [355000.0, 4.0], [358200.0, 41.0], [356600.0, 7.0], [353400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 675000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 303.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1278.0, "series": [{"data": [[0.0, 383.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 303.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 349.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1278.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.70309814E12, "maxY": 904.0, "series": [{"data": [[1.70309826E12, 904.0], [1.70309844E12, 652.251773049646], [1.70309814E12, 663.9788182831664], [1.7030988E12, 1.5], [1.7030985E12, 309.2340425531917]], "isOverall": false, "label": "Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7030988E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 180.0, "minX": 1.0, "maxY": 675002.0, "series": [{"data": [[2.0, 674669.0], [150.0, 357374.5], [149.0, 356975.0], [158.0, 354905.0], [155.0, 356833.0], [153.0, 356615.5], [162.0, 358808.5], [160.0, 355279.0], [175.0, 358219.0], [172.0, 358022.0], [182.0, 355215.0], [179.0, 358304.0], [178.0, 356813.5], [191.0, 358520.0], [188.0, 358343.0], [187.0, 357636.0], [186.0, 358648.0], [185.0, 357291.0], [184.0, 358500.0], [195.0, 358197.0], [192.0, 355366.0], [207.0, 358887.0], [206.0, 355353.0], [205.0, 357927.0], [201.0, 357912.0], [214.0, 358570.5], [221.0, 355243.0], [218.0, 358479.0], [227.0, 358499.0], [226.0, 357286.0], [224.0, 358839.0], [235.0, 358440.5], [232.0, 357668.0], [247.0, 358102.0], [242.0, 358207.0], [241.0, 357082.3333333333], [251.0, 358038.0], [269.0, 358068.0], [266.0, 358585.0], [277.0, 358816.0], [275.0, 358028.0], [299.0, 358417.5], [293.0, 357357.0], [289.0, 357458.0], [314.0, 358830.0], [313.0, 357999.0], [308.0, 357374.5], [334.0, 358364.0], [332.0, 357813.0], [331.0, 358756.0], [327.0, 357107.0], [325.0, 355268.0], [324.0, 357827.0], [347.0, 358168.0], [343.0, 357636.5], [341.0, 357720.0], [366.0, 356918.0], [363.0, 357196.0], [358.0, 357420.0], [355.0, 358528.0], [354.0, 357357.0], [352.0, 358319.0], [369.0, 358561.5], [398.0, 357386.3333333333], [395.0, 358242.5], [394.0, 358134.5], [390.0, 358134.0], [399.0, 357125.0], [414.0, 358491.0], [413.0, 358108.0], [412.0, 358531.5], [411.0, 357371.4], [408.0, 357934.12000000017], [406.0, 358566.0], [403.0, 358264.0], [427.0, 358016.0], [426.0, 358541.0], [423.0, 358188.0], [424.0, 357083.6666666667], [420.0, 357493.75], [419.0, 358376.0], [416.0, 357118.0], [446.0, 351128.0], [436.0, 358223.6666666667], [439.0, 358290.0], [434.0, 357712.0], [456.0, 352762.0], [452.0, 351770.0], [451.0, 348930.0], [478.0, 358209.0], [476.0, 358536.0], [472.0, 351819.0], [471.0, 357402.0], [469.0, 352733.0], [468.0, 357404.76470588235], [488.0, 357502.0], [489.0, 351649.0], [490.0, 354485.0], [485.0, 357086.0], [510.0, 355196.5], [507.0, 353417.1666666666], [506.0, 353311.0], [502.0, 355777.5], [497.0, 354991.5], [540.0, 355492.0], [542.0, 356796.0], [538.0, 356506.0], [536.0, 355437.5], [534.0, 355012.0], [531.0, 353817.0], [529.0, 358106.0], [525.0, 356092.0], [516.0, 354468.8823529412], [515.0, 357200.0], [512.0, 353492.0], [519.0, 356884.25974025973], [517.0, 358267.5], [524.0, 356437.0], [522.0, 357713.5], [520.0, 355942.75], [560.0, 354586.0], [568.0, 355877.0], [567.0, 355603.0], [566.0, 356858.3333333333], [562.0, 356459.0], [559.0, 354514.0], [556.0, 354355.0], [553.0, 358121.0], [548.0, 355499.0], [546.0, 355839.0], [545.0, 351840.0], [604.0, 355884.75], [603.0, 356813.0], [607.0, 357590.0], [599.0, 355588.0], [594.0, 355690.6666666667], [590.0, 355763.0], [589.0, 357849.0], [584.0, 357117.25], [578.0, 354111.0], [576.0, 357064.6666666667], [637.0, 356897.3333333333], [639.0, 355572.6666666667], [636.0, 356391.0], [632.0, 357709.0], [628.0, 355330.0], [626.0, 356753.0], [625.0, 355828.0], [624.0, 357612.0], [620.0, 355376.0], [609.0, 355258.0], [608.0, 356744.0], [614.0, 356242.0], [613.0, 356454.0], [618.0, 355521.0], [616.0, 356579.5], [670.0, 356707.0], [671.0, 356412.0], [668.0, 356456.0], [667.0, 357288.0], [665.0, 357314.0], [664.0, 357805.0], [651.0, 355658.5], [646.0, 355266.0], [645.0, 356271.6666666667], [648.0, 355963.0], [663.0, 357913.0], [662.0, 358054.0], [659.0, 354647.0], [657.0, 357280.5], [656.0, 358075.0], [701.0, 356117.0], [699.0, 356109.5], [678.0, 356911.0], [677.0, 356876.0], [675.0, 355057.5], [695.0, 358048.0], [694.0, 357117.0], [690.0, 355177.0], [689.0, 356662.5], [688.0, 356752.0], [681.0, 355948.5], [680.0, 356053.0], [711.0, 357048.0], [735.0, 353736.0], [733.0, 356808.6666666667], [727.0, 356656.5], [725.0, 356427.0], [724.0, 356142.5], [719.0, 356757.25], [715.0, 356719.6666666667], [718.0, 357551.0], [706.0, 358016.0], [705.0, 357053.0], [708.0, 356497.0], [765.0, 356819.8333333334], [767.0, 356328.0], [764.0, 357181.6666666667], [763.0, 356497.0], [754.0, 356891.0], [753.0, 356750.0], [752.0, 355893.5], [749.0, 356223.0], [736.0, 356897.5], [740.0, 355910.0], [737.0, 356446.0], [742.0, 356586.5], [741.0, 355266.0], [748.0, 356404.5], [746.0, 354571.0], [745.0, 356180.0], [744.0, 355981.5], [786.0, 357170.0], [792.0, 356201.0], [773.0, 357295.0], [771.0, 356742.5], [770.0, 356538.0], [791.0, 356565.0], [790.0, 357314.0], [787.0, 357374.3333333333], [783.0, 356576.0], [781.0, 355957.0], [780.0, 355783.0], [778.0, 355594.0], [777.0, 357187.0], [776.0, 356106.6666666667], [825.0, 356415.0], [830.0, 357520.0], [831.0, 356446.5], [827.0, 356361.0], [824.0, 355694.5], [806.0, 356521.0], [805.0, 356091.0], [804.0, 356939.0], [803.0, 356458.85714285716], [802.0, 357065.3333333333], [801.0, 356241.0], [800.0, 356865.0], [821.0, 355690.0], [818.0, 357195.0], [815.0, 356751.0], [814.0, 356710.6666666667], [810.0, 355935.0], [809.0, 356713.0], [808.0, 357770.0], [862.0, 355620.0], [863.0, 357193.0], [861.0, 357398.5], [858.0, 355937.5], [857.0, 357088.0], [856.0, 355314.5], [847.0, 356885.25], [833.0, 357208.0], [832.0, 354593.0], [839.0, 356729.0], [837.0, 356577.0], [836.0, 356834.80000000005], [846.0, 356078.0], [842.0, 357031.0], [841.0, 357506.0], [840.0, 357125.6666666667], [852.0, 356783.0], [851.0, 356670.5], [848.0, 355836.0], [891.0, 356637.0], [892.0, 357018.3333333333], [890.0, 356394.0], [887.0, 356587.1111111111], [884.0, 357080.6666666667], [880.0, 356426.0], [878.0, 356430.5], [872.0, 356909.0], [868.0, 357363.0], [866.0, 357229.0], [867.0, 354431.0], [925.0, 354652.0], [927.0, 355101.0], [921.0, 356446.0], [920.0, 354728.5], [919.0, 355691.5], [918.0, 356724.0], [917.0, 354808.5], [913.0, 354731.0], [911.0, 355190.0], [897.0, 357183.0], [903.0, 356652.6], [899.0, 357172.25], [910.0, 356015.0], [908.0, 356316.0], [907.0, 357421.0], [906.0, 355715.5], [904.0, 149125.0], [958.0, 13878.5], [959.0, 12854.0], [956.0, 13810.5], [954.0, 14471.0], [953.0, 13584.0], [952.0, 14469.0], [943.0, 14841.0], [929.0, 355011.0], [942.0, 14640.0], [941.0, 14900.333333333334], [951.0, 14098.0], [948.0, 13310.0], [947.0, 13625.0], [946.0, 13939.666666666666], [988.0, 10585.0], [991.0, 7487.0], [977.0, 11141.0], [979.0, 11782.0], [978.0, 8398.0], [981.0, 11244.0], [980.0, 11281.0], [990.0, 10459.0], [989.0, 7950.0], [987.0, 10185.0], [986.0, 10970.0], [985.0, 9525.0], [984.0, 10751.0], [974.0, 12105.0], [961.0, 13667.0], [960.0, 13506.0], [963.0, 12003.0], [962.0, 13681.0], [965.0, 13596.0], [964.0, 13614.0], [967.0, 11818.0], [966.0, 13272.0], [973.0, 12098.0], [972.0, 11414.0], [971.0, 11247.0], [970.0, 11846.0], [969.0, 12808.0], [968.0, 12779.0], [983.0, 9665.0], [982.0, 10927.0], [1000.0, 5372.0], [999.0, 6127.0], [998.0, 8544.0], [997.0, 9723.0], [996.0, 9308.0], [995.0, 6902.0], [994.0, 6951.0], [993.0, 8925.0], [992.0, 9748.0], [1.0, 674262.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[614.0713359273665, 329081.9870298318]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 332.0], [150.0, 838.0], [149.0, 826.0], [158.0, 3150.0], [155.0, 1827.0], [153.0, 1861.0], [162.0, 254.5], [160.0, 3153.0], [175.0, 244.5], [172.0, 710.5], [182.0, 3119.0], [179.0, 225.0], [178.0, 1741.0], [191.0, 317.0], [188.0, 301.0], [187.0, 825.5], [186.0, 332.0], [185.0, 1145.0], [184.0, 333.0], [195.0, 609.0], [192.0, 3162.0], [207.0, 195.0], [206.0, 3138.0], [205.0, 733.0], [201.0, 888.5], [214.0, 229.0], [221.0, 3113.0], [218.0, 341.0], [227.0, 244.5], [226.0, 1133.0], [224.0, 244.0], [235.0, 425.5], [232.0, 1402.0], [247.0, 205.0], [242.0, 626.6666666666666], [241.0, 1711.0], [251.0, 197.0], [269.0, 198.0], [266.0, 263.0], [277.0, 228.0], [275.0, 628.0], [299.0, 286.0], [293.0, 1101.0], [289.0, 1131.0], [314.0, 240.0], [313.0, 201.0], [308.0, 1265.5], [334.0, 327.0], [332.0, 1075.0], [331.0, 310.0], [327.0, 1139.0], [325.0, 3120.0], [324.0, 534.0], [347.0, 221.0], [343.0, 682.5], [341.0, 818.0], [366.0, 1386.0], [363.0, 1156.0], [358.0, 1141.0], [355.0, 373.0], [354.0, 1123.0], [352.0, 278.0], [369.0, 217.0], [398.0, 1505.6666666666665], [395.0, 437.5], [394.0, 787.5], [390.0, 209.0], [399.0, 1133.0], [414.0, 353.0], [413.0, 257.0], [412.0, 310.5], [411.0, 1011.9], [408.0, 712.0999999999999], [406.0, 344.0], [403.0, 242.0], [427.0, 222.0], [426.0, 233.0], [423.0, 251.5], [424.0, 1150.0], [420.0, 824.5], [419.0, 335.6666666666667], [416.0, 1534.0], [446.0, 1119.0], [436.0, 266.0], [439.0, 317.0], [434.0, 558.0], [456.0, 1433.5], [452.0, 617.0], [451.0, 3173.0], [478.0, 347.0], [476.0, 259.0], [472.0, 1131.0], [471.0, 1132.0], [469.0, 345.0], [468.0, 669.0588235294117], [488.0, 907.5], [489.0, 1097.0], [490.0, 1682.0], [485.0, 1110.0], [510.0, 894.0], [507.0, 903.1666666666666], [506.0, 241.0], [502.0, 251.0], [497.0, 667.0], [540.0, 289.0], [542.0, 1140.0], [538.0, 1115.0], [536.0, 966.5], [534.0, 3141.0], [531.0, 1714.0], [529.0, 338.0], [525.0, 570.0], [516.0, 1040.5294117647059], [515.0, 1133.0], [512.0, 231.0], [519.0, 902.8181818181821], [517.0, 209.0], [524.0, 1563.3333333333335], [522.0, 258.0], [520.0, 1426.75], [560.0, 3108.0], [568.0, 187.0], [567.0, 854.6666666666666], [566.0, 1226.3333333333333], [562.0, 1178.0], [559.0, 1124.0], [556.0, 1585.0], [553.0, 313.0], [548.0, 292.0], [546.0, 753.0], [545.0, 3453.0], [604.0, 1454.25], [603.0, 1131.0], [607.0, 653.0], [599.0, 340.0], [594.0, 1303.3333333333335], [590.0, 1282.25], [589.0, 346.0], [584.0, 330.25], [578.0, 1163.0], [576.0, 840.3333333333334], [637.0, 1258.3333333333335], [639.0, 1287.6666666666665], [636.0, 1337.0], [632.0, 365.0], [628.0, 554.0], [626.0, 936.5], [625.0, 243.0], [624.0, 223.0], [620.0, 747.0], [609.0, 640.0], [608.0, 293.5], [614.0, 1393.0], [613.0, 1139.0], [618.0, 213.0], [616.0, 274.5], [670.0, 519.5], [671.0, 325.0], [668.0, 320.0], [667.0, 196.0], [665.0, 661.0], [664.0, 360.0], [651.0, 763.0], [646.0, 1131.0], [645.0, 299.3333333333333], [648.0, 1153.5], [663.0, 336.0], [662.0, 293.0], [659.0, 1655.0], [657.0, 681.0], [656.0, 280.0], [701.0, 198.0], [699.0, 1000.9999999999999], [678.0, 209.0], [677.0, 746.0], [675.0, 1823.5], [695.0, 239.0], [694.0, 744.0], [690.0, 3160.0], [689.0, 879.0], [688.0, 719.0], [681.0, 846.0], [680.0, 961.0], [711.0, 1143.0], [735.0, 3102.0], [733.0, 646.1666666666667], [727.0, 346.0], [725.0, 1043.5], [724.0, 891.5], [719.0, 406.25], [715.0, 1230.3333333333333], [718.0, 225.0], [706.0, 310.0], [705.0, 515.0], [708.0, 1155.0], [765.0, 751.6666666666666], [767.0, 736.0], [764.0, 518.0], [763.0, 913.0], [754.0, 318.6666666666667], [753.0, 1123.0], [752.0, 1693.5], [749.0, 534.0], [736.0, 600.5], [740.0, 504.0], [737.0, 329.0], [742.0, 293.5], [741.0, 1221.0], [748.0, 666.5], [746.0, 2180.0], [745.0, 195.0], [744.0, 885.5], [786.0, 345.0], [792.0, 530.0], [773.0, 215.0], [771.0, 270.5], [770.0, 750.0], [791.0, 712.0], [790.0, 180.0], [787.0, 587.6666666666666], [783.0, 722.5], [781.0, 826.5], [780.0, 1123.0], [778.0, 1229.0], [777.0, 290.0], [776.0, 849.0], [825.0, 1147.0], [830.0, 309.0], [831.0, 1167.5], [827.0, 1124.0], [824.0, 1777.0], [806.0, 1124.0], [805.0, 1145.0], [804.0, 522.0], [803.0, 794.2857142857142], [802.0, 534.6666666666666], [801.0, 1131.0], [800.0, 370.0], [821.0, 1723.0], [818.0, 268.5], [815.0, 1149.0], [814.0, 714.6666666666666], [810.0, 1136.0], [809.0, 650.5], [808.0, 352.0], [862.0, 1660.0], [863.0, 353.0], [861.0, 340.0], [858.0, 1730.5], [857.0, 695.0], [856.0, 1909.0], [847.0, 410.5], [833.0, 643.0], [832.0, 3142.5], [839.0, 696.5], [837.0, 533.0], [836.0, 760.8], [846.0, 1135.0], [842.0, 206.0], [841.0, 325.0], [840.0, 460.3333333333333], [852.0, 698.0], [851.0, 702.0], [848.0, 1132.0], [891.0, 679.5], [892.0, 258.3333333333333], [890.0, 1134.0], [887.0, 902.8888888888889], [884.0, 366.3333333333333], [880.0, 1232.3333333333333], [878.0, 911.5], [872.0, 444.5], [868.0, 436.5], [866.0, 340.0], [867.0, 3106.0], [925.0, 1119.0], [927.0, 1142.0], [921.0, 324.0], [920.0, 1730.0], [919.0, 674.5], [918.0, 332.0], [917.0, 1958.0], [913.0, 2076.0], [911.0, 2281.0], [897.0, 370.0], [903.0, 760.6], [899.0, 430.625], [910.0, 1119.0], [908.0, 1115.0], [907.0, 333.0], [906.0, 1715.0], [904.0, 276.0], [958.0, 421.5], [959.0, 1116.0], [956.0, 707.5], [954.0, 276.0], [953.0, 538.0], [952.0, 331.0], [943.0, 230.0], [929.0, 609.75], [942.0, 488.0], [941.0, 886.0], [951.0, 531.6666666666666], [948.0, 1571.0], [947.0, 1122.0], [946.0, 1645.3333333333333], [988.0, 361.0], [991.0, 3165.0], [977.0, 827.0], [979.0, 313.0], [978.0, 3160.0], [981.0, 682.0], [980.0, 214.0], [990.0, 337.0], [989.0, 3112.0], [987.0, 205.0], [986.0, 287.0], [985.0, 1111.0], [984.0, 286.0], [974.0, 294.0], [961.0, 297.0], [960.0, 322.0], [963.0, 1122.0], [962.0, 228.0], [965.0, 277.0], [964.0, 266.0], [967.0, 1121.0], [966.0, 492.0], [973.0, 338.0], [972.0, 902.0], [971.0, 1133.0], [970.0, 525.0], [969.0, 301.0], [968.0, 314.0], [983.0, 1110.0], [982.0, 209.0], [1000.0, 3159.0], [999.0, 3165.0], [998.0, 542.0], [997.0, 265.0], [996.0, 296.0], [995.0, 3150.0], [994.0, 3125.0], [993.0, 1139.0], [992.0, 682.0], [1.0, 249.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[614.0713359273665, 866.102464332036]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 675002.0], [150.0, 358213.0], [149.0, 357801.5], [158.0, 358055.0], [155.0, 358661.0], [153.0, 358477.0], [162.0, 359065.5], [160.0, 358433.0], [175.0, 358464.5], [172.0, 358733.0], [182.0, 358334.0], [179.0, 358529.0], [178.0, 358554.5], [191.0, 358837.0], [188.0, 358645.0], [187.0, 358463.0], [186.0, 358981.0], [185.0, 358436.0], [184.0, 358833.0], [195.0, 358806.3333333333], [192.0, 358728.0], [207.0, 359087.0], [206.0, 358491.0], [205.0, 358660.5], [201.0, 358801.5], [214.0, 358800.0], [221.0, 358356.0], [218.0, 358821.0], [227.0, 358744.5], [226.0, 358420.0], [224.0, 359084.0], [235.0, 358866.0], [232.0, 359070.0], [247.0, 358307.0], [242.0, 358834.6666666667], [241.0, 358793.6666666667], [251.0, 358236.0], [269.0, 358267.0], [266.0, 358848.0], [277.0, 359045.0], [275.0, 358657.0], [299.0, 358703.5], [293.0, 358458.0], [289.0, 358592.0], [314.0, 359071.0], [313.0, 358201.0], [308.0, 358641.75], [334.0, 358692.0], [332.0, 358889.0], [331.0, 359067.0], [327.0, 358247.0], [325.0, 358388.0], [324.0, 358362.0], [347.0, 358390.0], [343.0, 358319.0], [341.0, 358538.0], [366.0, 358305.0], [363.0, 358353.0], [358.0, 358561.0], [355.0, 358903.0], [354.0, 358480.0], [352.0, 358597.0], [369.0, 358779.0], [398.0, 358892.3333333333], [395.0, 358681.0], [394.0, 358922.5], [390.0, 358343.0], [399.0, 358258.0], [414.0, 358845.0], [413.0, 358365.0], [412.0, 358843.0], [411.0, 358384.1], [408.0, 358646.77999999985], [406.0, 358911.0], [403.0, 358507.0], [427.0, 358239.0], [426.0, 358775.0], [423.0, 358440.0], [424.0, 358233.6666666667], [420.0, 358318.25], [419.0, 358712.3333333333], [416.0, 358653.0], [446.0, 352248.0], [436.0, 358490.3333333333], [439.0, 358608.0], [434.0, 358271.0], [456.0, 354195.5], [452.0, 352388.0], [451.0, 352103.0], [478.0, 358557.0], [476.0, 358795.0], [472.0, 352951.0], [471.0, 358535.0], [469.0, 353078.0], [468.0, 358074.5882352941], [488.0, 358410.5], [489.0, 352746.0], [490.0, 356167.5], [485.0, 358196.0], [510.0, 356091.0], [507.0, 354320.6666666667], [506.0, 353553.0], [502.0, 356029.75], [497.0, 355659.0], [540.0, 355782.0], [542.0, 357938.0], [538.0, 357622.0], [536.0, 356404.5], [534.0, 358154.0], [531.0, 355531.5], [529.0, 358445.0], [525.0, 356662.5], [516.0, 355509.76470588235], [515.0, 358334.0], [512.0, 353723.0], [519.0, 357787.8701298702], [517.0, 358479.0], [524.0, 358001.6666666667], [522.0, 357972.0], [520.0, 357370.25], [560.0, 357695.0], [568.0, 356068.0], [567.0, 356458.3333333333], [566.0, 358085.3333333333], [562.0, 357637.0], [559.0, 355639.0], [556.0, 355941.0], [553.0, 358435.0], [548.0, 355793.0], [546.0, 356593.0], [545.0, 355293.0], [604.0, 357339.5], [603.0, 357945.0], [607.0, 358243.0], [599.0, 355928.0], [594.0, 356994.3333333333], [590.0, 357045.5], [589.0, 358196.0], [584.0, 357448.75], [578.0, 355275.0], [576.0, 357906.3333333333], [637.0, 358156.3333333333], [639.0, 356860.6666666667], [636.0, 357728.3333333333], [632.0, 358075.0], [628.0, 355885.0], [626.0, 357689.8333333334], [625.0, 356071.0], [624.0, 357836.0], [620.0, 356123.0], [609.0, 355898.3333333333], [608.0, 357038.0], [614.0, 357635.0], [613.0, 357594.0], [618.0, 355735.0], [616.0, 356854.5], [670.0, 357226.5], [671.0, 356738.0], [668.0, 356777.0], [667.0, 357485.0], [665.0, 357975.0], [664.0, 358166.0], [651.0, 356422.5], [646.0, 356397.0], [645.0, 356571.6666666667], [648.0, 357117.0], [663.0, 358250.0], [662.0, 358349.0], [659.0, 356303.0], [657.0, 357962.0], [656.0, 358355.0], [701.0, 356316.0], [699.0, 357112.0], [678.0, 357120.0], [677.0, 357624.0], [675.0, 356881.0], [695.0, 358287.0], [694.0, 357861.0], [690.0, 358337.0], [689.0, 357541.5], [688.0, 357472.0], [681.0, 356795.0], [680.0, 357014.0], [711.0, 358192.0], [735.0, 356839.0], [733.0, 357455.1666666667], [727.0, 357003.0], [725.0, 357470.8333333333], [724.0, 357034.5], [719.0, 357164.5], [715.0, 357952.3333333333], [718.0, 357777.0], [706.0, 358326.0], [705.0, 357568.0], [708.0, 357652.0], [765.0, 357572.1666666667], [767.0, 357064.5], [764.0, 357700.0], [763.0, 357410.5], [754.0, 357210.0], [753.0, 357874.0], [752.0, 357587.5], [749.0, 356757.0], [736.0, 357498.5], [740.0, 356414.0], [737.0, 356775.0], [742.0, 356881.0], [741.0, 356487.0], [748.0, 357071.5], [746.0, 356752.0], [745.0, 356376.0], [744.0, 356868.0], [786.0, 357515.0], [792.0, 356731.0], [773.0, 357511.0], [771.0, 357014.0], [770.0, 357288.0], [791.0, 357284.0], [790.0, 357499.0], [787.0, 357962.6666666667], [783.0, 357299.0], [781.0, 356784.0], [780.0, 356907.0], [778.0, 356824.0], [777.0, 357478.0], [776.0, 356956.6666666667], [825.0, 357563.0], [830.0, 357830.0], [831.0, 357614.5], [827.0, 357486.0], [824.0, 357472.0], [806.0, 357645.0], [805.0, 357236.5], [804.0, 357462.0], [803.0, 357254.0], [802.0, 357600.3333333333], [801.0, 357373.0], [800.0, 357235.0], [821.0, 357413.5], [818.0, 357464.5], [815.0, 357901.0], [814.0, 357426.3333333333], [810.0, 357072.0], [809.0, 357364.5], [808.0, 358123.0], [862.0, 357280.5], [863.0, 357547.0], [861.0, 357740.0], [858.0, 357668.5], [857.0, 357783.0], [856.0, 357223.5], [847.0, 357296.25], [833.0, 357852.0], [832.0, 357736.0], [839.0, 357425.5], [837.0, 357110.0], [836.0, 357595.99999999994], [846.0, 357214.0], [842.0, 357238.0], [841.0, 357832.0], [840.0, 357586.6666666667], [852.0, 357481.0], [851.0, 357375.5], [848.0, 356968.0], [891.0, 357318.0], [892.0, 357277.6666666667], [890.0, 357529.0], [887.0, 357490.77777777775], [884.0, 357447.3333333333], [880.0, 357659.0], [878.0, 357343.0], [872.0, 357353.5], [868.0, 357799.5], [866.0, 357570.0], [867.0, 357537.0], [925.0, 355771.0], [927.0, 356244.0], [921.0, 356771.0], [920.0, 356459.5], [919.0, 356367.0], [918.0, 357056.0], [917.0, 356767.0], [913.0, 356807.5], [911.0, 357472.0], [897.0, 357553.0], [903.0, 357413.39999999997], [899.0, 357604.125], [910.0, 357134.0], [908.0, 357431.0], [907.0, 357754.0], [906.0, 357433.5], [904.0, 149401.0], [958.0, 14300.5], [959.0, 13970.0], [956.0, 14518.5], [954.0, 14748.0], [953.0, 14126.0], [952.0, 14801.0], [943.0, 15071.0], [929.0, 355621.25], [942.0, 15128.0], [941.0, 15786.666666666666], [951.0, 14630.0], [948.0, 14882.0], [947.0, 14748.5], [946.0, 15587.333333333334], [988.0, 10946.0], [991.0, 10652.0], [977.0, 11969.0], [979.0, 12096.0], [978.0, 11558.0], [981.0, 11927.0], [980.0, 11496.0], [990.0, 10796.0], [989.0, 11063.0], [987.0, 10391.0], [986.0, 11257.0], [985.0, 10636.0], [984.0, 11037.0], [974.0, 12400.0], [961.0, 13964.0], [960.0, 13829.0], [963.0, 13125.0], [962.0, 13910.0], [965.0, 13874.0], [964.0, 13881.0], [967.0, 12940.0], [966.0, 13764.0], [973.0, 12436.0], [972.0, 12316.0], [971.0, 12382.0], [970.0, 12372.0], [969.0, 13110.0], [968.0, 13094.0], [983.0, 10776.0], [982.0, 11137.0], [1000.0, 8531.0], [999.0, 9293.0], [998.0, 9087.0], [997.0, 9988.0], [996.0, 9605.0], [995.0, 10053.0], [994.0, 10076.0], [993.0, 10065.0], [992.0, 10431.0], [1.0, 674512.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[614.0713359273666, 329949.05188067415]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3.9, "minX": 1.70309814E12, "maxY": 2438743.8, "series": [{"data": [[1.70309826E12, 38618.433333333334], [1.70309844E12, 2398744.3666666667], [1.70309814E12, 2438743.8], [1.7030988E12, 200.06666666666666], [1.7030985E12, 279322.76666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70309826E12, 5.85], [1.70309844E12, 1337.7], [1.70309814E12, 1872.0], [1.7030988E12, 3.9], [1.7030985E12, 302.25]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7030988E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 866.102464332036, "minX": 1.70309814E12, "maxY": 674757.0, "series": [{"data": [[1.70309826E12, 149125.0], [1.70309844E12, 356425.5921985819], [1.70309814E12, 11830.111111111111], [1.7030988E12, 674465.5], [1.7030985E12, 357835.6382978723]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70309814E12, 866.102464332036]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70309826E12, 149401.0], [1.70309844E12, 357297.9414893615], [1.70309814E12, 12763.079365079362], [1.7030988E12, 674757.0], [1.7030985E12, 358664.4751773048]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7030988E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 275.0, "minX": 1.70309814E12, "maxY": 14526.739361702126, "series": [{"data": [[1.70309826E12, 7313.0], [1.70309844E12, 14526.739361702126], [1.70309814E12, 6821.206349206348], [1.7030988E12, 8432.0], [1.7030985E12, 10098.95035460993]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70309814E12, 865.9571984435793]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70309826E12, 275.0], [1.70309844E12, 871.4858156028375], [1.70309814E12, 932.2063492063493], [1.7030988E12, 290.5], [1.7030985E12, 826.5957446808515]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7030988E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 118.0, "minX": 1.70309814E12, "maxY": 6553.0, "series": [{"data": [[1.70309826E12, 6346.0], [1.70309844E12, 5989.921985815603], [1.70309814E12, 5617.555555555554], [1.7030988E12, 6553.0], [1.7030985E12, 5990.6312056737615]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70309814E12, 642.0674448767828]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70309826E12, 131.0], [1.70309844E12, 644.4964539007102], [1.70309814E12, 678.031746031746], [1.7030988E12, 118.0], [1.7030985E12, 627.3404255319151]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7030988E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 163.0, "minX": 1.70309814E12, "maxY": 359048.0, "series": [{"data": [[1.70309826E12, 149401.0], [1.70309844E12, 358866.0], [1.70309814E12, 15912.0], [1.7030985E12, 359048.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70309826E12, 149401.0], [1.70309844E12, 358409.8], [1.70309814E12, 11042.2], [1.7030985E12, 358956.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70309826E12, 149401.0], [1.70309844E12, 358855.19], [1.70309814E12, 15133.619999999995], [1.7030985E12, 359048.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70309826E12, 149401.0], [1.70309844E12, 358608.85], [1.70309814E12, 13619.299999999996], [1.7030985E12, 359048.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70309826E12, 149125.0], [1.70309844E12, 353227.0], [1.70309814E12, 163.0], [1.7030985E12, 355640.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70309826E12, 149263.0], [1.70309844E12, 357448.0], [1.70309814E12, 662.0], [1.7030985E12, 358262.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7030985E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 310.0, "minX": 2.0, "maxY": 674590.5, "series": [{"data": [[2.0, 78828.0], [8.0, 15271.5], [568.0, 358013.0], [43.0, 1163.0], [13.0, 3160.0], [14.0, 10693.5], [58.0, 354812.5], [65.0, 3150.0], [4.0, 8815.5], [16.0, 11307.0], [282.0, 358262.0], [300.0, 1115.0], [20.0, 14665.0], [350.0, 310.0], [22.0, 13983.5], [90.0, 355845.0], [354.0, 356683.0], [24.0, 11669.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 674590.5], [568.0, 357911.0], [282.0, 358463.0], [354.0, 357025.0], [90.0, 355841.5], [24.0, 353695.5], [6.0, 351936.5], [28.0, 352830.0], [58.0, 355081.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 568.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 310.0, "minX": 2.0, "maxY": 5447.5, "series": [{"data": [[2.0, 3490.0], [8.0, 3738.0], [568.0, 3525.5], [43.0, 1163.0], [13.0, 3160.0], [14.0, 3473.0], [58.0, 4817.0], [65.0, 3150.0], [4.0, 3567.5], [16.0, 3498.5], [282.0, 3392.0], [300.0, 1115.0], [20.0, 3545.5], [350.0, 310.0], [22.0, 3804.0], [90.0, 3208.0], [354.0, 3457.5], [24.0, 3637.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 4197.5], [568.0, 3644.5], [282.0, 3653.0], [354.0, 3607.5], [90.0, 3619.5], [24.0, 5447.5], [6.0, 5122.0], [28.0, 3603.5], [58.0, 4210.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 568.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 38.55, "minX": 1.70309814E12, "maxY": 38.55, "series": [{"data": [[1.70309814E12, 38.55]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70309814E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.70309814E12, "maxY": 12.85, "series": [{"data": [[1.70309826E12, 0.03333333333333333], [1.70309844E12, 2.033333333333333], [1.70309814E12, 2.1], [1.7030985E12, 0.23333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70309814E12, 12.85]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70309844E12, 2.533333333333333], [1.7030985E12, 3.6666666666666665]], "isOverall": false, "label": "Non HTTP response code: java.lang.IllegalArgumentException", "isController": false}, {"data": [[1.70309844E12, 2.2333333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}, {"data": [[1.70309844E12, 12.0], [1.7030988E12, 0.06666666666666667], [1.7030985E12, 0.8]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7030988E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70309814E12, "maxY": 12.85, "series": [{"data": [[1.70309826E12, 0.016666666666666666], [1.70309844E12, 1.0166666666666666], [1.70309814E12, 1.05], [1.7030985E12, 0.11666666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70309844E12, 8.383333333333333], [1.7030988E12, 0.03333333333333333], [1.7030985E12, 2.2333333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.70309814E12, 12.85]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70309844E12, 8.383333333333333], [1.7030988E12, 0.03333333333333333], [1.7030985E12, 2.2333333333333334]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.70309826E12, 0.016666666666666666], [1.70309844E12, 1.0166666666666666], [1.70309814E12, 1.05], [1.7030985E12, 0.11666666666666667]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7030988E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.70309814E12, "maxY": 16.766666666666666, "series": [{"data": [[1.70309826E12, 0.03333333333333333], [1.70309844E12, 2.033333333333333], [1.70309814E12, 14.95], [1.7030985E12, 0.23333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70309844E12, 16.766666666666666], [1.7030988E12, 0.06666666666666667], [1.7030985E12, 4.466666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7030988E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

